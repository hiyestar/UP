
您在考试过程中将使用的两个系统的信息如下：
 * server0.example.com(ServerX) 是一个主要的服务器
 * desktop0.example.com(DesktopX)主要用作客户端
两个系统的root密码为redhat
系统的IP地址由DHCP提供，您可以视其正常，或者您可以按以下信息重新设置为静态IP：
 * server0.example.com ：172.25.0.11
 * desktop0.example.com ：172.25.0.10
子网掩码为：255.255.255.0
您的系统是DNS域 .example.com 的成员，所有在DNS域 .example.com 中的系统都在子网172.25.0.0/24中，同样在这个子网中的系统都在DNS域 .example.com 中。除非特别指明，所有要求配置的网络都必须能被 .example.com 域中的系统访问。
classroom.example.com 提供了集中认证的服务域 .example.com，两个系统 server0 和 desktop0 已经预先配置成此域的客户端，此域提供了下列用户帐号（模拟环境酌情创建）：
 * ldapuser0 （密码：kerberos)
 * fleyd （密码：redhat)
 * sergio （密码：redhat)
 * krishna （密码：redhat)
防火墙默认是打开的，在您认为是适当的时候可以关闭。其他的关于防火墙的设置可能在单独的要求中。

您在考试中使用的Red Hat Enterprise Linux操作系统版本对应的分发包可以通过YUM在下面的链接中找到：http://content.example.com/rhel7.0/x86_64/dvd
一部分要求包含了主机安全、确定您的对主机安全限制没有阻挡要求允许的主机或网络。虽然您正确配置了网络服务但本来允许访问的主机或网络被阻挡。这样也不会得分。
您将会注意到一些要求明确不允许服务被域 my133t.org 访问，这个域的系统在 172.34.0.0/255.255.255.0 子网中，并且这些子网中的系统都属于域 my133t.org 。
[root@server0 ~]# firewall-cmd --set-default-zone=trusted 
success
[root@server0 ~]# getenforce
Enforcing
[root@desktop0 ~]# firewall-cmd --set-default-zone=trusted
success
[root@desktop0 ~]# getenforce 
Enforcing

[root@server0 ~]# echo  server0.example.com > /etc/hostname
[root@server0 ~]# cat /etc/hostname
server0.example.com
[root@server0 ~]# nmcli device status 
设备  类型      状态    CONNECTION  
eth0  ethernet  连接的  System eth0 
[root@server0 ~]# nmcli connection modify 'System eth0' ipv4.method manual ipv4.addresses '172.25.0.11/24 172.25.0.254' ipv4.dns 172.25.254.254 connection.autoconnect yes
[root@server0 ~]# nmcli connection up 'System eth0'

[root@desktop0 ~]# echo desktop0.example.com > /etc/hostname
[root@desktop0 ~]# nmcli connection modify 'System eth0' ipv4.method manual ipv4.addresses '172.25.0.10/24 172.25.0.254' ipv4.dns 172.25.254.254 connection.autoconnect yes
[root@desktop0 ~]# nmcli connection up 'System eth0'

[root@room11pc13 ~]# tar  -xPf  /root/桌面/rht-labcheck.tar.gz 
[root@room11pc13 ~]# tar -xPf  '/root/桌面/lab2.tar.gz' 
[root@room11pc13 ~]# tar -tPf /root/桌面/lab2.tar.gz
---------------------------NFS----------------------
[root@desktop0 ~]# lab nfskrb5 setup
Installing packages ...
Updating authconfig for ldap & krb5 ...
SUCCESS

[root@server0 ~]# yum install -y nfs-utils
[root@server0 ~]# mkdir -p /public  /protected/project
[root@server0 ~]# lab nfskrb5 setup
Installing packages ...
Updating authconfig for ldap & krb5 ...
SUCCESS
[root@server0 ~]# ls /public/
[root@server0 ~]# ls /protected/
project

[root@server0 ~]# id ldapuser0
uid=1700(ldapuser0) gid=1700(ldapuser0) 组=1700(ldapuser0)
[root@server0 ~]# chown ldapuser0 /protected/project/
[root@server0 ~]# ls -ld /protected/project/
drwxr-xr-x. 2 ldapuser0 root 6 7月  27 08:17 /protected/project/
[root@server0 ~]# wget http://classroom.example.com/pub/keytabs/server0.keytab  -O  /etc/krb5.keytab

[root@server0 ~]# ls /etc/krb5.
krb5.conf    krb5.keytab 

[root@server0 ~]# vim /etc/exports
[root@server0 ~]# cat  /etc/exports
/public/	172.25.0.0/24(ro)
/protected/	172.25.0.0/24(rw,sec=krb5p)

/若未明确要求版本,此操作可不做
 12 # Optional arguments passed to rpc.nfsd. See rpc.nfsd(8)
 13 RPCNFSDARGS="-V 4"
 14 # Number of nfs server processes to be started.
[root@server0 ~]# vim /etc/sysconfig/nfs 
[root@server0 ~]# head -13 /etc/sysconfig/nfs | tail -1
RPCNFSDARGS="-V 4"
------------=============rpcnfsdargs-------------
[root@server0 ~]# vim /etc/sysconfig/nfs 
[root@server0 ~]# head -13 /etc/sysconfig/nfs | tail -1
RPCNFSDARGS=""
[root@server0 ~]# systemctl restart nfs-secure-server nfs-server
===============================
[root@server0 ~]# systemctl start nfs-secure-server nfs-server  //启用两个系统服务
[root@server0 ~]# systemctl enable nfs-secure-server nfs-server  

[root@server0 ~]# exportfs -rv     //必要时更新共享配置
exporting 172.25.0.0/24:/protected
exporting 172.25.0.0/24:/public
[root@server0 ~]# echo public > /public/ser.txt
[root@server0 ~]# echo protected-project-server > /protected/project/serv.txt

[root@desktop0 ~]# lab nfskrb5 setup
Installing packages ...
Updating authconfig for ldap & krb5 ...
SUCCESS
[root@desktop0 ~]# mkdir  -p  /mnt/nfsmount  /mnt/nfssecure/ 
[root@desktop0 ~]# mkdir  -p  /mnt/nfsmount  /mnt/nfssecure/

[root@desktop0 ~]# wget  http://classroom.example.com/pub/keytabs/desktop0.keytab  -O  /etc/krb5.keytab
[root@desktop0 ~]# ls /etc/krb5.
krb5.conf    krb5.keytab 
[root@desktop0 ~]# systemctl start nfs-secure   //启用安全 NFS 的客户端服务
[root@desktop0 ~]# systemctl enable nfs-secure
[root@desktop0 ~]# showmount -e  server0.example.com
Export list for server0.example.com:
/protected 172.25.0.0/24
/public    172.25.0.0/24
[root@desktop0 ~]# vim /etc/fstab 
[root@desktop0 ~]# tail -2 /etc/fstab 
172.25.0.11:/public  /mnt/nfsmount    nfs    defaults,_netdev   0    0
172.25.0.11:/protected  /mnt/nfssecure  nfs  defaults,sec=krb5p,_netdev   0    0
[root@desktop0 ~]# mount -a
[root@desktop0 ~]# df -hT  /mnt/nfsmount   /mnt/nfssecure
文件系统               类型  容量  已用  可用 已用% 挂载点
172.25.0.11:/public    nfs4   10G  3.1G  7.0G   31% /mnt/nfsmount
172.25.0.11:/protected nfs    10G  3.1G  7.0G   31% /mnt/nfssecure
[root@desktop0 ~]# cat /mnt/nfssecure/project/serv.txt 
protected-project-server
[root@desktop0 ~]# ls /mnt/
nfsmount  nfssecure
[root@desktop0 ~]# cat /mnt/nfsmount/ser.txt 
public

[root@desktop0 ~]# ssh ldapuser0@desktop0

ldapuser0@desktop0's password: kerberos
Last login: Fri Jul 27 10:06:03 2018
[ldapuser0@desktop0 ~]$ pwd
/home/guests/ldapuser0
[ldapuser0@desktop0 ~]$ ls -ld /mnt/nfssecure/project/
drwxr-xr-x. 2 ldapuser0 root 21 7月  27 09:06 /mnt/nfssecure/project/
[ldapuser0@desktop0 ~]$ echo ldapuser0 > /mnt/nfssecure/project/ldap.txt
[ldapuser0@desktop0 ~]$ ls -l /mnt/nfssecure/project/ldap.txt
-rw-rw-r--. 1 ldapuser0 ldapuser0 10 7月  27 10:12 /mnt/nfssecure/project/ldap.txt
[ldapuser0@desktop0 ~]$ exit
登出
[root@desktop0 ~]# ls /mnt/nfssecure/project/
ldap.txt  serv.txt
[root@desktop0 ~]# ls -l /mnt/nfssecure/project/serv.txt 
-rw-r--r--. 1 root root 25 7月  27 09:06 /mnt/nfssecure/project/serv.txt
[root@desktop0 ~]# ls -l /mnt/nfssecure/project/ldap.txt 
-rw-rw-r--. 1 ldapuser0 ldapuser0 10 7月  27 10:12 /mnt/nfssecure/project/ldap.txt
[root@desktop0 ~]# cat /mnt/nfssecure/project/ldap.txt
ldapuser0

[root@server0 ~]# ls /protected/project/
ldap.txt  serv.txt
------------------NFS-----------------------
=============== WEB ============
[root@server0 ~]# yum -y install  httpd
[root@server0 ~]# vim /etc/httpd/conf.d/slave.conf
[root@server0 ~]# cat /etc/httpd/conf.d/slave.conf 
<VirtualHost *:80>
  ServerName    server0.example.com
  DocumentRoot  /var/www/html/
</VirtualHost>
[root@server0 ~]# wget http://classroom.example.com/pub/materials/station.html  -O /var/www/html/index.html
[root@server0 ~]# systemctl restart httpd
[root@server0 ~]# systemctl enable httpd.service 
[root@server0 ~]# vim /etc/ssh/sshd_config 
[root@server0 ~]# tail -1 /etc/ssh/sshd_config 
DenyUsers *@*.my133t.org *@172.34.0.*
[root@server0 ~]# firewall-cmd --get-default-zone 
trusted
[root@server0 ~]# firewall-cmd --permanent  --add-source=172.34.0.0/24  --zone=block
success
-----------------------------------------------------------------------
[root@server0 ~]# firewall-cmd --permanent --zone=trusted --add-forward-port=port=5423:proto=tcp:toport=80
success
-------------------------------------------------
[root@server0 ~]# mv /etc/httpd/conf.d/slave.conf /etc/httpd/conf.d/virt.conf
[root@server0 ~]# ls -l /etc/httpd/conf.d/virt.conf
-rw-r--r--. 1 root root 101 7月  27 12:35 /etc/httpd/conf.d/virt.conf
[root@server0 ~]# cat /etc/httpd/conf.d/virt.conf 
<VirtualHost *:80>
  ServerName    server0.example.com
  DocumentRoot  /var/www/html/
</VirtualHost>

[root@server0 ~]# vim /etc/httpd/conf.d/dir.conf
[root@server0 ~]# cat /etc/httpd/conf.d/dir.conf
<Directory /var/www/html/>
#  Deny  from  172.34.0.0/24
#  Deny  from  172.34.0.0/255.255.255.0
#  Allow from all
 <RequireAll>
   Require all granted
   Require not ip 172.34.0
 </RequireAll>
</Directory>
[root@server0 ~]# vim /etc/httpd/conf.d/dir.conf 
[root@server0 html]# vim /etc/httpd/conf.d/dir.conf
[root@server0 html]# httpd -t
Syntax OK
[root@server0 html]# cat /etc/httpd/conf.d/dir.conf
<Directory /var/www/html/>
 <RequireAll>
  Require all granted
  Require not ip 172.34.0.0/24
 </RequireAll>
</Directory>

[root@server0 ~]# curl server0.example.com
Default Site.
[root@desktop0 ~]# curl server0.example.com
Default Site.

[root@server0 html]# cat /etc/httpd/conf.d/dir.conf
<Directory /var/www/html/>
 <RequireAll>
  Require all granted
  Require not ip 172.34.0.0/24
 </RequireAll>
</Directory>
[root@server0 html]# httpd -t
Syntax OK
[root@server0 html]# vim /etc/httpd/conf.d/dir.conf
[root@server0 html]# cat /etc/httpd/conf.d/dir.conf
<Directory /var/www/html/>
 <RequireAll>
  Require all granted
  Require not ip 172.34.0
 </RequireAll>
</Directory>
[root@server0 html]# httpd -t
Syntax OK
[root@server0 html]# cat /etc/httpd/conf.d/dir.conf 
<Directory /var/www/html/>
 Deny from 172.34.0.0/24
 Allow from all
</Directory>
[root@server0 html]# httpd -t
Syntax OK

[root@server0 html]# vim /etc/httpd/conf.d/dir.conf
[root@server0 html]# httpd -t
Syntax OK
[root@server0 html]# cat /etc/httpd/conf.d/dir.conf
<Directory /var/www/html/>
# Deny from 172.34.0.0/24
 Deny from 172.34.0.0/255.255.255.0
 Allow from all
</Directory>

========================================================







[root@server0 ~]# teamdctl team0 state
setup:
  runner: activebackup
ports:
  eth1
    link watches:
      link summary: up
      instance[link_watch_0]:
        name: ethtool
        link: up
  eth2
    link watches:
      link summary: up
      instance[link_watch_0]:
        name: ethtool
        link: up
runner:
  active port: eth1
===============================================
7. 配置本地邮件服务
#hostnamectl set-hostname server0.example.com
#lab smtp-nullclient setup
#host  smtp0.example.com查看后端邮件服务器地址
[root@server0 ~]# rpm -q postfix
postfix-2.10.1-6.el7.x86_64

318 relayhost = [smtp0.example.com]在这些系统上本地发送的任何邮件都会自动路由到后端邮件服务器

116 inet_interfaces = loopback-only 这些系统不接收外部发送来的邮件

100 myorigin = desktop0.example.com
                           从这些系统上发送的邮件显示来自于

267 mynetworks = 127.0.0.0/8 [::1]/128 //信任网络允许本机访问

164 mydestination =    //此行的值设为空

193 local_transport = error:local delivery disabled //模拟测试写此项,考试若无要求可不设
[root@server0 ~]# vim /etc/postfix/main.cf 
[root@server0 ~]# systemctl restart postfix.service 
[root@server0 ~]# systemctl enable postfix
[root@server0 ~]# echo 'MailXXXXX Data.' | mail -s 'TestXXX1' student
[root@server0 ~]# mail -u student
No mail for student
[root@server0 ~]# host  smtp0.example.com    查看后端邮件服务器地址
smtp0.example.com is an alias for desktop0.example.com.
desktop0.example.com has address 172.25.0.10
desktop0.example.com mail is handled by 10 smtp0.example.com.

[root@server0 ~]# lab smtp-nullclient grade  作业模拟检查
Checking for Postfix configuration... PASS


[root@desktop0 ~]# lab smtp-nullclient setup
[root@desktop0 ~]# mail -u student
Heirloom Mail version 12.5 7/5/10.  Type ? for help.
"/var/mail/student": 2 messages 1 new
    1 root                  Sat Jul 28 15:57  22/843   "Test1"
>N  2 root                  Sat Jul 28 15:59  21/840   "TestXXX1"
& 1
Message  1:

========================================


[root@desktop0 ~]# smbclient -L server0
Enter root's password: 
Anonymous login successful
Domain=[STAFF] OS=[Unix] Server=[Samba 4.1.1]

	Sharename       Type      Comment
	---------       ----      -------
	common          Disk      
	devops          Disk      
	IPC$            IPC       IPC Service (Samba Server Version 4.1.1)
Anonymous login successful
Domain=[STAFF] OS=[Unix] Server=[Samba 4.1.1]

	Server               Comment
	---------            -------

	Workgroup            Master
	---------            -------




[root@desktop0 ~]# mkdir  /mnt/dev
[root@desktop0 ~]# vim /etc/fstab 
[root@desktop0 ~]# tail -1 /etc/fstab
//172.25.0.11/devops  /mnt/dev  cifs  defaults,user=kenji,pass=atenorth,multiuser,sec=ntlmssp,_netdev   0    0
[root@desktop0 ~]# mount -a
[root@desktop0 ~]# su - student 
[student@desktop0 ~]$ pwd
/home/student
[student@desktop0 ~]$ cifscreds add -u chihiro 172.25.0.11
          密码atenorth
Password: 
[student@desktop0 ~]$ touch /mnt/dev/chihiro.txt
[student@desktop0 ~]$ exit

[root@server0 ~]# ls /devops
chihiro.txt

[root@server0 ~]# ls -l /devops/chihiro.txt 
-rw-r--r--. 1 chihiro chihiro 0 7月  27 20:41 /devops/chihiro.txt


13.配置安全 web 服务
[root@server0 ~]# yum -y install mod_ssl
[root@server0 ~]# cd /etc/pki/tls/certs/
[root@server0 certs]# ls
ca-bundle.crt        localhost.crt    Makefile
ca-bundle.trust.crt  make-dummy-cert  renew-dummy-cert
[root@server0 certs]# wget  http://classroom.example.com/pub/tls/certs/server0.crt
[root@server0 certs]# wget http://classroom.example.com/pub/example-ca.crt
[root@server0 certs]# cd ../private
[root@server0 private]# pwd
/etc/pki/tls/private
[root@server0 private]# ls 
localhost.key
[root@server0 private]# wget http://classroom.example.com/pub/tls/private/server0.key
[root@server0 private]# ls
localhost.key  server0.key
[root@server0 private]# cd ../
[root@server0 tls]# ls
cert.pem  certs  misc  openssl.cnf  private
[root@server0 tls]# ls /etc/pki/tls/certs/
ca-bundle.crt        example-ca.crt  make-dummy-cert  renew-dummy-cert
ca-bundle.trust.crt  localhost.crt   Makefile         server0.crt
[root@server0 tls]# vim /etc/httpd/conf.d/ssl.conf

100 SSLCertificateFile /etc/pki/tls/certs/server0.crt
122 #SSLCACertificateFile /etc/pki/tls/certs/ca-bundle.crt
123 SSLCACertificateFile /etc/pki/tls/certs/example-ca.crt

107 SSLCertificateKeyFile /etc/pki/tls/private/server0.key

[root@server0 ~]# head -100 /etc/httpd/conf.d/ssl.conf | tail -1
SSLCertificateFile /etc/pki/tls/certs/server0.crt

[root@server0 ~]# head -107  /etc/httpd/conf.d/ssl.conf | tail   -1
SSLCertificateKeyFile /etc/pki/tls/private/server0.key

[root@server0 ~]# head -123  /etc/httpd/conf.d/ssl.conf | tail -1
SSLCACertificateFile /etc/pki/tls/certs/example-ca.crt

[root@server0 ~]# systemctl restart httpd
[root@server0 ~]# systemctl enable httpd



14.配置虚拟主机

[root@server0 ~]# mkdir /var/www/virtual
[root@server0 ~]# ls -Zd /var/www/virtual
drwxr-xr-x. root root unconfined_u:object_r:httpd_sys_content_t:s0 /var/www/virtual
[root@server0 ~]# ls -Zd /var/www/
drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 /var/www/

[root@server0 ~]# chcon -R --reference=/var/www/  /var/www/virtual/
[root@server0 ~]# ls -Zd /var/www/virtual
drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 /var/www/virtual


[root@server0 ~]# useradd fleyd
[root@server0 ~]# setfacl -m u:fleyd:7 /var/www/virtual/

[root@server0 ~]# getfacl /var/www/virtual/
getfacl: Removing leading '/' from absolute path names
# file: var/www/virtual/
# owner: root
# group: root
user::rwx
user:harry:rwx
user:fleyd:rwx
group::r-x
mask::rwx
other::r-x

[root@server0 ~]# setfacl -x u:harry /var/www/virtual/  #删除指定用户harry的ACL权限
[root@server0 ~]# getfacl /var/www/virtual/
getfacl: Removing leading '/' from absolute path names
# file: var/www/virtual/
# owner: root
# group: root
user::rwx
user:fleyd:rwx
group::r-x
mask::rwx
other::r-x

[root@server0 ~]# wget http://classroom.example.com/pub/materials/www.html -O  /var/www/virtual/index.html
[root@server0 ~]# vim /etc/httpd/conf.d/virt.conf 
[root@server0 ~]# cat /etc/httpd/conf.d/virt.conf
<VirtualHost *:80>
  ServerName    server0.example.com
  DocumentRoot  /var/www/html/
</VirtualHost>
<VirtualHost *:80>
  ServerName    www0.example.com
  DocumentRoot  /var/www/virtual/
</VirtualHost>
[root@server0 ~]# cd /var/www/virtual/
[root@server0 virtual]# httpd -t
Syntax OK
[root@server0 virtual]# systemctl restart httpd
[root@server0 virtual]# curl www0.example.com
Virtual Site.
[root@server0 virtual]# curl server0.example.com
Default Site.
[root@server0 virtual]# nslookup server0.example.com
Server:		172.25.254.254
Address:	172.25.254.254#53

Name:	server0.example.com
Address: 172.25.0.11

[root@server0 virtual]# nslookup www0.example.com
Server:		172.25.254.254
Address:	172.25.254.254#53

www0.example.com	canonical name = server0.example.com.
Name:	server0.example.com
Address: 172.25.0.11
[root@server0 virtual]# nslookup classroom.example.com
Server:		172.25.254.254
Address:	172.25.254.254#53

Name:	classroom.example.com
Address: 172.25.254.254

[root@server0 virtual]# cat /etc/resolv.conf 
# Generated by NetworkManager
search example.com
nameserver 172.25.254.254
-----------------------------------------------
15.配置 web 内容的访问
[root@server0 ~]# mkdir /var/www/html/private

[root@server0 ~]# wget http://classroom.example.com/pub/materials/private.html  -O /var/www/html/private/index.html
[root@server0 ~]# ls -l /var/www/html/private/index.html
-rw-r--r--. 1 root root 14 3月  31 2016 /var/www/html/private/index.html
[root@server0 ~]# ls /etc/httpd/conf.d/
autoindex.conf  README    userdir.conf  welcome.conf
dir.conf        ssl.conf  virt.conf
[root@server0 ~]# vim /etc/httpd/conf.d/dir.conf 
[root@server0 ~]# cat /etc/httpd/conf.d/dir.conf 
<Directory /var/www/html/>
# Deny from 172.34.0.0/24
 Deny from 172.34.0.0/255.255.255.0
 Allow from all
</Directory>
<Directory /var/www/html/private/>
  Require ip 127.0.0.1  ::1  172.25.0.11
</Directory>
[root@server0 ~]# cd /var/www/html/private/
[root@server0 private]# httpd -t
Syntax OK
[root@server0 private]# cd /var/www/html/
[root@server0 html]# httpd -t
Syntax OK
[root@server0 html]# systemctl restart httpd
[root@server0 html]# curl server0.example.com
Default Site.
[root@server0 html]# yum install -y  elinks
[root@server0 ~]# elinks server0.example.com
  http://server0.example.com/ 
     Default Site.                                                                                                                                                   ┌──────────────────────────────────────┐                    
  │                                               │                    
  │  Do you really want to exit ELinks? │                                  
  │          [ Yes ]   [ No ]           │                                       └──────────────────────────────────────┘                    
  [root@server0 ~]# elinks -dump  server0.example.com
   Default Site.
[root@server0 ~]# elinks -dump  server0.example.com/private
   Private Site.
  [root@desktop0 ~]# yum install -y elinks
[root@desktop0 ~]# elinks -dump  server0.example.com/private
                                   Forbidden

   You don't have permission to access /private on this server.
[root@desktop0 ~]# elinks -dump  server0.example.com
   Default Site.
                                                         
16.实现动态 WEB 内容
试题概述:
在 system1 上配置提供动态 Web 内容,要求如下:
 动态内容由名为 alt.groupX.example.com 的虚拟主机提供
 虚拟主机侦听在端口 8909
 从 http://server1.groupX.example.com/materials/webinfo.wsgi 下载一个脚本,
然后放在适当的位置,无论如何不要修改此文件的内容
 客户端访问 http://alt.groupX.example.com:8909 可接收到动态生成的 Web 页
 此 http://alt.groupX.example.com:8909/必须能被 groupX.example.com 域内的所
有系统访问

实现动态Web内容
在 server0 上配置提供动态Web内容，要求如下：
动态内容由名为 webapp0.example.com 的虚拟主机提供
虚拟主机侦听在端口 8909
从 http://classroom.example.com/pub/materials/webinfo.wsgi 下载一个脚本，然后放在适当的位置，无论如何不要修改此文件的内容
客户端访问 http://webapp0.example.com:8909 可接收到动态生成的 Web 页
此 http://webapp0.example.com:8909/必须能被 example.com 域内的所有系统访问


[root@server0 ~]# mkdir /var/www/webapp0

[root@server0 ~]# yum install -y mod_wsgi
[root@server0 ~]# wget http://classroom.example.com/pub/materials/webinfo.wsgi  -O /var/www/webapp0/webinfo.wsgi 

[root@server0 ~]# ls /etc/httpd/conf.d/
autoindex.conf  README    userdir.conf  welcome.conf
dir.conf        ssl.conf  virt.conf

[root@server0 ~]# vim /etc/httpd/conf.d/virt.conf 
[root@server0 ~]# cat /etc/httpd/conf.d/virt.conf
<VirtualHost *:80>
  ServerName    server0.example.com
  DocumentRoot  /var/www/html/
</VirtualHost>
<VirtualHost *:80>
  ServerName    www0.example.com
  DocumentRoot  /var/www/virtual/
</VirtualHost>
Listen 8909
<VirtualHost *:8909>
  ServerName    webapp0.example.com
  DocumentRoot  /var/www/webapp0/
  WsgiScriptAlias  /  /var/www/webapp0/webinfo.wsgi
</VirtualHost>
[root@server0 ~]# cd /var/www/webapp0/
[root@server0 webapp0]# httpd -t
Syntax OK

[root@server0 ~]# semanage port -l | grep http
http_cache_port_t              tcp      8080, 8118, 8123, 10001-10010
http_cache_port_t              udp      3130
http_port_t                    tcp      80, 81, 443, 488, 8008, 8009, 8443, 9000
pegasus_http_port_t            tcp      5988
pegasus_https_port_t           tcp      5989
[root@server0 ~]# semanage port -a -t http_port_t -p tcp 8909  //开启非标准端口

[root@server0 ~]# semanage port -l | grep http
http_cache_port_t              tcp      8080, 8118, 8123, 10001-10010
http_cache_port_t              udp      3130
http_port_t                    tcp      8909, 80, 81, 443, 488, 8008, 8009, 8443, 9000
pegasus_http_port_t            tcp      5988
pegasus_https_port_t           tcp      5989

[root@server0 ~]# systemctl restart httpd

[root@desktop0 ~]# elinks -dump  webapp0.example.com
   Default Site.
[root@desktop0 ~]# elinks -dump  webapp0.example.com:8909
   UNIX EPOCH time is now: 1532762160.86
===========================================
17. 创建一个脚本
创建一个脚本

在 server0 上创建一个名为/root/foo.sh 的脚本，让其提供下列特性：
当运行/root/foo.sh redhat，输出为 fedora
当运行/root/foo.sh fedora，输出为 redhat
当没有任何参数或者参数不是 redhat 或者 fedora 时，其错误输出产生以下的信息：/root/foo.sh redhat|fedora 

[root@server0 ~]# vim /root/foo.sh

[root@server0 ~]# cat /root/foo.sh
#!/bin/bash
if [ $# -eq 0 ];then
  echo '/root/foo.sh redhat | fedora' >&2
  exit 1
else

if [ $1 == redhat ];then
  echo fedora 
  exit 0
elif [ $1 == fedora ];then
  echo redhat
  exit 0
else 
  echo '/root/foo.sh redhat | fedora' >&2
  exit 2
fi

fi

[root@server0 ~]# chmod +x /root/foo.sh

[root@server0 ~]# /root/foo.sh
/root/foo.sh redhat | fedora
[root@server0 ~]# echo $?
1
[root@server0 ~]# /root/foo.sh redhat sss
fedora
[root@server0 ~]# echo $?
0
[root@server0 ~]# /root/foo.sh redhat 
fedora
[root@server0 ~]# echo $?
0
[root@server0 ~]# /root/foo.sh fedora
redhat
[root@server0 ~]# echo $?
0
[root@server0 ~]# /root/foo.sh fedora xxx
redhat
[root@server0 ~]# echo $?
0
[root@server0 ~]# /root/foo.sh xxx ssss
/root/foo.sh redhat | fedora
[root@server0 ~]# echo $?
2
================================
18. 创建一个添加用户的脚本

创建一个添加用户的脚本

在 server0 上创建一个脚本，名为/root/batchusers，此脚本能实现为系统 server0 创建本地用户，并且这些用户的用户名来自一个包含用户名的文件，同时满足下列要求：
此脚本要求提供一个参数，此参数就是包含用户名列表的文件
如果没有提供参数，此脚本应该给出下面的提示信息 Usage: /root/batchusers 然后退出并返回相应的值
如果提供一个不存在的文件名，此脚本应该给出下面的提示信息 Input file not found 然后退出并返回相应的值
创建的用户登陆Shell为/bin/false，此脚本不需要为用户设置密码
您可以从下面的 URL 获取用户名列表作为测试用：http://classroom.example.com/pub/materials/userlist


[root@server0 ~]# wget http://classroom.example.com/pub/materials/userlist
[root@server0 ~]# ls -l /root/userlist
-rw-r--r--. 1 root root 27 6月  26 2016 /root/userlist

[root@server0 ~]# vim /root/batchusers
[root@server0 ~]# chmod +x /root/batchusers
[root@server0 ~]# cat /root/batchusers
#!/bin/bash
if [ $# -eq 0 ] ; then
 echo "Usage: /root/batchusers">&2
 exit 1
else
 if [ ! -f $1 ] ; then
   echo "Input file not found">&2
   exit 2
 else
  for name in $(cat $1)
    do
     useradd -s /bin/false $name  创建的用户登陆Shell为/bin/false
    done
   exit 0
 fi
fi
[root@server0 ~]# cat /root/userlist 
duanwu
zhongqiu
zhsan
lisi
[root@server0 ~]#  /root/batchusers
Usage: /root/batchusers
[root@server0 ~]# echo $?
1
[root@server0 ~]#  /root/batchusers sgjsdfgj
Input file not found
[root@server0 ~]# echo $?
2
[root@server0 ~]#  /root/batchusers /root/userlist #此参数就是包含用户名列表的文件
[root@server0 ~]# echo $?
0
[root@server0 ~]# id duanwu
uid=1003(duanwu) gid=1003(duanwu) 组=1003(duanwu)
[root@server0 ~]# id lisi
uid=1006(lisi) gid=1006(lisi) 组=1006(lisi)
[root@server0 ~]# id zhongqiu
uid=1004(zhongqiu) gid=1004(zhongqiu) 组=1004(zhongqiu)

19. 配置 iSCSI 服务端
配置 server0 提供一个 iSCSI 服务，磁盘名为 iqn.2016-02.com.example:server0，并符合下列要求：
服务端口为 3260
使用 iscsi_store 作其后端卷，其大小为 3G
此服务只能被 desktop0.example.com 访问

[root@server0 ~]# lsblk /dev/vdb
NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
vdb  253:16   0  10G  0 disk 























===================
[root@desktop0 ~]# mkdir -m 2770 /setgid
[root@desktop0 ~]# ls -ld /setgid
drwxrws---. 2 root root 6 7月  28 11:43 /setgid
[root@desktop0 ~]# groupadd -g 2222  SetGiD
[root@desktop0 ~]# chown :SetGiD /setgid
[root@desktop0 ~]# ls -ld /setgid
drwxrws---. 2 root SetGiD 6 7月  28 11:43 /setgid
[root@desktop0 ~]# mkdir /setgid/new2
[root@desktop0 ~]# ls -ld /setgid/new2
drwxr-sr-x. 2 root SetGiD 6 7月  28 11:50 /setgid/new2
=======================================
fdisk -l  /dev/vdb 查看磁盘分区模式 gpt?dos?
gdisk /dev/vdb 支持gpt        fdisk /dev/vdb 支持dos
parted /dev/vdb 支持gpt

[root@desktop0 ~]# blkid /dev/vdb
[root@desktop0 ~]# blkid /dev/vda
/dev/vda: PTTYPE="dos" 
[root@desktop0 ~]# mkfs
mkfs         mkfs.cramfs  mkfs.ext3    mkfs.fat     mkfs.msdos   mkfs.xfs
mkfs.btrfs   mkfs.ext2    mkfs.ext4    mkfs.minix   mkfs.vfat 

[root@desktop0 ~]# mkfs.vfat -F 32 /dev/vdb  #windows linux跨平台使用
mkfs.fat 3.0.20 (12 Jun 2013)

[root@desktop0 ~]# blkid /dev/vdb
/dev/vdb: UUID="C084-EA94" TYPE="vfat"

[root@desktop0 ~]# parted /dev/vdb
GNU Parted 3.1
使用 /dev/vdb
(parted) mktable gpt

(parted) unit MB   

(parted) mkpart vglvprfenquming

文件系统类型？  [ext2]? ext4
起始点？ 0M                                                               
结束点？ 600M
(parted) print                                                            
Model: Virtio Block Device (virtblk)
Disk /dev/vdb: 10737MB
Partition Table: gpt
Number  Start   End    Size   File system  Name             标志
 1      0.02MB  600MB  600MB               vglvprfenquming
(parted) quit   

[root@desktop0 ~]# lsblk /dev/vdb
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
vdb    253:16   0    10G  0 disk 
└─vdb1 253:17   0 572.2M  0 part 
[root@desktop0 ~]# blkid /dev/vdb
/dev/vdb: PTTYPE="gpt" 
[root@desktop0 ~]# blkid /dev/vdb1
[root@desktop0 ~]# blkid /dev/vda
/dev/vda: PTTYPE="dos"

[root@desktop0 ~]# mkswap /dev/vdb1
正在设置交换空间版本 1，大小 = 585916 KiB
无标签，UUID=378eba7b-2e81-4f77-8a47-547ab69c05f4

[root@desktop0 ~]# swapon /dev/vdb1
[root@desktop0 ~]# swapon -s
文件名		类型		大小	  已用	       权限
/dev/vdb1   partition	585916   0	     -1

[root@desktop0 ~]# vim /etc/fstab
[root@desktop0 ~]# tail -1 /etc/fstab
/dev/vdb1    swap  swap   defaults,pri=5   0    0  
[root@desktop0 ~]# mount -a
[root@desktop0 ~]# blkid /dev/vdb1
/dev/vdb1: UUID="378eba7b-2e81-4f77-8a47-547ab69c05f4" TYPE="swap" PARTLABEL="vglvprfenquming" PARTUUID="e957322d-30ef-4ecc-b90a-cd1d5f5c6a83" 
-------------------------------------------------------------
#yum -y install mod_ssl  支持安全web服务器
#yum -y install mod_wsgi解析Python软件包

[root@server0 ~]# fdisk /dev/vdb

命令(输入 m 获取帮助)：n

Select (default p): e
分区号 (1-4，默认 1)：4

Last 扇区, +扇区 or +size{K,M,G} (2048-20971519，默认为 20971519)：+5G 
分区 4 已设置为 Extended 类型，大小设为 5 GiB

命令(输入 m 获取帮助)：n

Select (default p): l
添加逻辑分区 5

Last 扇区, +扇区 or +size{K,M,G} (4096-10487807，默认为 10487807)：+3G
分区 5 已设置为 Linux 类型，大小设为 3 GiB

命令(输入 m 获取帮助)：n
Select (default p): p
分区号 (1-3，默认 1)：1
Last 扇区, +扇区 or +size{K,M,G} (10487808-20971519，默认为 20971519)：+1G
分区 1 已设置为 Linux 类型，大小设为 1 GiB
命令(输入 m 获取帮助)：w

[root@server0 ~]# partprobe

[root@server0 ~]# lsblk /dev/vdb
NAME   MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
vdb    253:16   0  10G  0 disk 
├─vdb1 253:17   0   1G  0 part 
├─vdb4 253:20   0   1K  0 part 
└─vdb5 253:21   0   3G  0 part 





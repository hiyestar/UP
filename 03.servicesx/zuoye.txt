
[root@server0 ~]# firewall-cmd --set-default-zone=trusted 
[root@server0 ~]# yum install -y elinks
[root@server0 ~]# yum install -y httpd

[root@server0 ~]# vim /etc/httpd/conf/httpd.conf 
[root@server0 ~]# head -95 /etc/httpd/conf/httpd.conf | tail -1
ServerName server0.example.com:80


[root@server0 ~]# cat /var/www/html/index.html 
<marquee><h1><font color=gray>/var/www/html/index.html</font></h1></marquee>
[root@server0 ~]# 
[root@server0 ~]# vim /etc/httpd/conf.d/slave.conf
[root@server0 ~]# cat /etc/httpd/conf.d/slave.conf
<VirtualHost *:80>
  ServerName  www0.example.com
  DocumentRoot /var/www/html
</VirtualHOst>
<VirtualHost *:80>
  ServerName  server0.example.com
  DocumentRoot /var/www/server
</VirtualHost>
[root@server0 ~]# mkdir /var/www/server
[root@server0 ~]# echo '<marquee><h1><font color=pink>/var/www/server/index.html SERVER0</font></h1></marquee>' > /var/www/server/index.html



[root@server0 ~]# ls -Zd /var/www/html
drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 /var/www/html
[root@server0 ~]# ls -Zd /var/www/server/
drwxr-xr-x. root root unconfined_u:object_r:httpd_sys_content_t:s0 /var/www/server/
[root@server0 ~]# chcon  -R  --reference=/var/www  /var/www/server
[root@server0 ~]# ls -Zd /var/www/server
drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 /var/www/server


[root@server0 ~]# cd /etc/pki/tls/certs
[root@server0 certs]# wget http://classroom.example.com/pub/tls/certs/server0.crt
[root@server0 certs]# wget http://classroom.example.com/pub/example-ca.crt
[root@server0 tls]# cd /etc/pki/tls/private
[root@server0 private]# ls
[root@server0 private]# wget http://classroom.example.com/pub/tls/private/server0.key



[root@server0 private]# pwd
/etc/pki/tls/private
[root@server0 private]# ls
server0.key
[root@server0 private]# ls /etc/pki/tls/certs
ca-bundle.crt        example-ca.crt   Makefile          server0.crt
ca-bundle.trust.crt  make-dummy-cert  renew-dummy-cert





[root@server0 private]# yum install -y mod_ssl




[root@server0 private]# ls
localhost.key  server0.key
[root@server0 private]# ls /etc/pki/tls/certs
ca-bundle.crt        example-ca.crt  make-dummy-cert  renew-dummy-cert
ca-bundle.trust.crt  localhost.crt   Makefile         server0.crt


[root@server0 private]# ls /etc/httpd/conf.d
autoindex.conf  README  slave.conf  ssl.conf  userdir.conf  welcome.conf


[root@server0 private]# vim /etc/httpd/conf.d/ssl.conf
[root@server0 private]# head -100 /etc/httpd/conf.d/ssl.conf | tail -1
SSLCertificateFile /etc/pki/tls/certs/server0.crt
[root@server0 private]# head -107 /etc/httpd/conf.d/ssl.conf | tail -1
SSLCertificateKeyFile /etc/pki/tls/private/server0.key
[root@server0 private]# head -122 /etc/httpd/conf.d/ssl.conf | tail -1
SSLCACertificateFile /etc/pki/tls/certs/example-ca.crt


[root@server0 private]# cat /etc/httpd/conf.d/slave.conf 
<VirtualHost *:80>
  ServerName  www0.example.com
  DocumentRoot /var/www/html
</VirtualHOst>
<VirtualHost *:80>
  ServerName  server0.example.com
  DocumentRoot /var/www/server
</VirtualHost>
[root@server0 private]# elinks -dump https://www0.example.com


[root@server0 private]# cat /var/www/server/index.html 
<marquee><h1><font color=pink>/var/www/server/index.html SERVER0</font></h1></marquee>
[root@server0 private]# cat /var/www/html/index.html 
<marquee><h1><font color=gray>/var/www/html/index.html</font></h1></marquee>


[root@server0 private]# vim /etc/httpd/conf.d/ssl.conf
[root@server0 private]# head -60 /etc/httpd/conf.d/ssl.conf | tail -2
DocumentRoot "/var/www/server"
ServerName server0.example.com:443
[root@server0 private]# systemctl restart httpd


[root@server0 private]# grep -v '^#' /etc/httpd/conf.d/ssl.conf | grep -v '^$' > /etc/httpd/conf.d/ssl2.conf
[root@server0 private]# vim /etc/httpd/conf.d/ssl2.conf
<VirtualHost _default_:443>
DocumentRoot "/var/www/html"
ServerName www0.example.com:443

[root@server0 private]# vim /etc/httpd/conf.d/ssl.conf
:r /etc/httpd/conf.d/ssl2.conf


[root@server0 private]# systemctl restart httpd
[root@server0 private]# firefox https://server0.example.com
[root@server0 private]# firefox https://www0.example.com

[root@server0 private]# grep -v '^#' /etc/httpd/conf.d/ssl.conf | grep -v '^$' > /etc/httpd/conf.d/ssl3.conf
[root@server0 private]# vim /etc/httpd/conf.d/ssl3.conf
[root@server0 private]# cat /etc/httpd/conf.d/ssl3.conf

Listen 443 https
SSLPassPhraseDialog exec:/usr/libexec/httpd-ssl-pass-dialog
SSLSessionCache         shmcb:/run/httpd/sslcache(512000)
SSLSessionCacheTimeout  300
SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin
SSLCryptoDevice builtin

<VirtualHost _default_:443>

DocumentRoot "/var/www/server"
ServerName server0.example.com:443

ErrorLog logs/ssl_error_log
TransferLog logs/ssl_access_log
LogLevel warn
SSLEngine on
SSLProtocol all -SSLv2
SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5

SSLCertificateFile /etc/pki/tls/certs/server0.crt

SSLCertificateKeyFile /etc/pki/tls/private/server0.key

SSLCACertificateFile /etc/pki/tls/certs/example-ca.crt

<Files ~ "\.(cgi|shtml|phtml|php3?)$">
    SSLOptions +StdEnvVars
</Files>
<Directory "/var/www/cgi-bin">
    SSLOptions +StdEnvVars
</Directory>
BrowserMatch "MSIE [2-5]" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0
CustomLog logs/ssl_request_log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
</VirtualHost>      
                            
<VirtualHost _default_:443>

DocumentRoot "/var/www/html"

ServerName www0.example.com:443

ErrorLog logs/ssl_error_log
TransferLog logs/ssl_access_log
LogLevel warn
SSLEngine on
SSLProtocol all -SSLv2
SSLCipherSuite HIGH:MEDIUM:!aNULL:!MD5

SSLCertificateFile /etc/pki/tls/certs/server0.crt

SSLCertificateKeyFile /etc/pki/tls/private/server0.key

SSLCACertificateFile /etc/pki/tls/certs/example-ca.crt

<Files ~ "\.(cgi|shtml|phtml|php3?)$">
    SSLOptions +StdEnvVars
</Files>
<Directory "/var/www/cgi-bin">
    SSLOptions +StdEnvVars
</Directory>
BrowserMatch "MSIE [2-5]" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0
CustomLog logs/ssl_request_log \
          "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
</VirtualHost>                                  
[root@server0 private]# 

------------------------------------------------------------------------------------



NSD Study













2018-04
达内IT培训集团	

案例练习,准备:
            rht-vmctl  reset  classroom
            rht-vmctl  reset  server
	        rht-vmctl  reset  desktop
###################################################################

案例1:为虚拟机 server0 配置以下静态地址参数，实现永久设置
– 主机名:server0.example.com	
– IP地址:172.25.0.11
– 子网掩码:255.255.255.0
– 默认网关:172.25.0.254
– DNS服务器:172.25.254.254
[root@server0 ~]# echo server0.example.com > /etc/hostname
[root@server0 ~]# nmcli connection modify "System eth0" ipv4.method manual ipv4.addresses '172.25.0.11/24 172.25.0.254' ipv4.dns 172.25.254.254 connection.autoconnect yes
[root@server0 ~]# nmcli connection up 'System eth0' 
[root@server0 ~]# nmcli connection show 
名称         UUID                                  类型            设备 
System eth0  5fb06bd0-0bb0-7ffb-45f1-d6edd65f3e03  802-3-ethernet  eth0 
[root@server0 ~]# hostname
server0.example.com
[root@server0 ~]# tail -7 /etc/sysconfig/network-scripts/ifcfg-eth0 
PREFIX0=24
GATEWAY0=172.25.0.254
DNS1=172.25.254.254
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
NAME="System eth0"
UUID=5fb06bd0-0bb0-7ffb-45f1-d6edd65f3e03


案例2:为虚拟机 desktop0 配置以下静态地址参数，实现永久设置
– 主机名:desktop0.example.com
– IP地址:172.25.0.10
– 子网掩码:255.255.255.0
– 默认网关:172.25.0.254
– DNS服务器:172.25.254.254
[root@desktop0 ~]# echo desktop0.example.com >/etc/hostname
[root@desktop0 ~]# nmcli connection modify 'System eth0' ipv4.method manual ipv4.addresses '172.25.0.10/24 172.25.0.254' ipv4.dns 172.25.254.254 connection.autoconnect yes
[root@desktop0 ~]# nmcli connection up 'System eth0' 
[root@desktop0 ~]# tail -8 /etc/sysconfig/network-scripts/ifcfg-eth0 | head -5
IPADDR0=172.25.0.10
PREFIX0=24
GATEWAY0=172.25.0.254
DNS1=172.25.254.254
DEFROUTE=yes



案例3:指定yum软件源
为 server0 指定可用的 yum 软件源
– YUM软件库的地址为 http://classroom.example.com/content/rhel7.0/x86_64/dvd
– 将此配置为虚拟机 server0 的默认软件仓库
– 确认可用的仓库列表
– 利用yum仓库安装httpd与vsftpd
[root@server0 ~]# vim /etc/yum.repos.d/rhel_dvd.repo 
[root@server0 ~]# cat /etc/yum.repos.d/rhel_dvd.repo
[rhel_dvd]
gpgcheck = 0
enabled = 1
baseurl = http://classroom.example.com/content/rhel7.0/x86_64/dvd
name = Remote classroom rhel7.0
[root@server0 ~]# yum clean all
[root@server0 ~]# yum repolist
[root@server0 ~]# yum install httpd vsftpd -y
[root@server0 ~]# rpm -q httpd vsftpd
httpd-2.4.6-17.el7.x86_64
vsftpd-3.0.2-9.el7.x86_64


案例4:指定yum软件源
为 desktop0 指定可用的 yum 软件源
– YUM软件库的地址为 http://classroom.example.com/content/rhel7.0/x86_64/dvd
– 将此配置为虚拟机 server0 的默认软件仓库
– 确认可用的仓库列表
– 利用yum仓库安装httpd与vsftpd
[root@desktop0 ~]# vim /etc/yum.repos.d/rhel_dvd.repo 
[root@desktop0 ~]# cat /etc/yum.repos.d/rhel_dvd.repo 
[rhel_dvd]
gpgcheck = 0
enabled = 1
baseurl = http://classroom.example.com/content/rhel7.0/x86_64/dvd
name = Remote classroom rhel7.0
[root@desktop0 ~]# yum clean all
[root@desktop0 ~]# yum repolist
[root@desktop0 ~]# yum install vsftpd httpd -y
[root@desktop0 ~]# rpm -q httpd vsftpd
httpd-2.4.6-17.el7.x86_64
vsftpd-3.0.2-9.el7.x86_64


案例5：虚拟机 server0上操作，复制、粘贴、移动
 以root用户新建/nsddir/目录，在此目录下新建readme.txt文件，并进一步完成下列操作
[root@svr7 ~]# mkdir /nsddir
[root@svr7 ~]# touch /nsddir/readme.txt
[root@svr7 ~]# ls /nsddir/
readme.txt


 1）将“I love Linux”写入到文件readme.txt 
[root@server0 ~]# echo 'I love Linux' > /nsddir/readme.txt 
	

 2）将readme.txt重命名为mylove.txt
[root@server0 ~]#  mv /nsddir/readme.txt /nsddir/mylove.txt

 3）将/etc/passwd、/boot、/etc/group同时拷贝到/nsddir目录下
[root@server0 ~]#cp -rpf /etc/passwd /boot /etc/group /nsddir/
 [root@server0 ~]# ls /nsddir/
boot  group  mylove.txt  passwd

 4）将ifconfig命令的前两行内容，追加写入mylove.txt
[root@server0 ~]# ifconfig | head -2 >> /nsddir/mylove.txt

 5）将主机名永久配置文件，拷贝到/nsddir目录下
[root@server0 ~]# 

 6）将DNS永久配置文件，拷贝到/nsddir目录下
[root@server0 ~]# cp /etc/hostname  /nsddir/


 7）新建目录结构/nsd/test
[root@server0 ~]# mkdir -p /nsd/test

 8）在目录/nsd/test创建文件nsd.txt并写入内容 NSD  Student
[root@server0 ~]# echo 'NSD Student' > /nsd/test/nsd.txt

 9）将/nsd/test/nsd.txt文件复制到/root目录下，同时 改名为 tedu.txt
[root@server0 ~]#  cp /nsd/test/nsd.txt /root/tedu.txt

 10）利用vim 修改文件/etc/hostname将其原有内容全部删除，写入新的内容为server0.example.com
[root@server0 ~]# vim /etc/hostname
[root@server0 ~]# cat /etc/hostname
server0.example.com

 11）将/etc/passwd 、/etc/resolv.conf、/etc/hostname 同时拷贝到/nsd/test/目录下
[root@server0 ~]# cp  /etc/passwd  /etc/resolv.conf  /etc/hostname  /nsd/test


 12）将文件 /nsd/test/hostname 重改名为 hn.txt 
[root@server0 ~]# mv /nsd/test/hostname  /nsd/test/hn.txt
 13）创建目录结构/nsd/test/kernel
[root@server0 ~]# mkdir -p /nsd/test/kernel


案例6:虚拟机 server0上操作，查找并处理文件
– 创建目录 /root/findfiles/
[root@server0 ~]#  mkdir /root/findfiles

– 利用find查找所有用户 student 拥有的文件,把它们拷贝到 /root/findfiles/ 文件夹中
[root@server0 ~]# find /  -user student -exec cp -p {} /root/findfiles \;
[root@server0 ~]# ls /root/findfiles
authorized_keys  gnome-initial-setup-done  monitors.xml  student
[root@server0 ~]# find / -user student -type f -exec \cp -p {} /root/findfiles/ \;
[root@server0 ~]# ls /root/findfiles/
authorized_keys  gnome-initial-setup-done  monitors.xml  student


– 利用find查找/boot目录下大于10M并且必须是文件，拷贝到/opt
[root@server0 ~]# find /boot -size +10M -type f -exec cp -p {} /opt \;
[root@server0 ~]# ls /opt
initramfs-0-rescue-946cb0e817ea4adb916183df8c4fc817.img  rh
initramfs-3.10.0-123.el7.x86_64.img


– 利用find查找/boot/ 目录下以 vm 开头且必须是文件，拷贝到/opt
[root@server0 ~]# find /boot -name 'vm*' -type f -exec cp -p {} /opt \;



案例7:虚拟机 server0上操作,查找并提取文件内容
1.在文件 /usr/share/dict/words 中查找到所有包含字符串 seismic 的行,将输出信息,写入到/opt/nsd.txt
[root@server0 ~]# grep seismic /usr/share/dict/words >/opt/nsd.txt

2.将/etc/login.defs文件有效内容 写入到/root/login.txt
[root@server0 ~]# grep -v '^#' /etc/login.defs | grep -v '^$' > /root/login.txt
[root@server0 ~]# cat /root/login.txt

3.提取/etc/passwd以bash结尾的行，将其信息写入/opt/system.txt
[root@server0 ~]# grep 'bash$' /etc/passwd > /opt/system.txt
[root@server0 ~]# cat /opt/system.txt
root:x:0:0:root:/root:/bin/bash
student:x:1000:1000:Student User:/home/student:/bin/bash

案例8:虚拟机 server0上操作,tar制作/释放归档压缩包（zcf、ztf、zxf、jcf、jtf、jxf、cf、tf）
    1）备份/boot、/home这两个文件夹，保存为boothome.tar.gz文件
[root@server0 ~]# tar -zcf /boothome.tar.gz /boot  /home

    2）查看boothome.tar.gz文件内包含哪些内容 
[root@server0 ~]# tar -tf /boothome.tar.gz 
boot/
boot/grub2/

    3）将boothome.tar.gz释放到文件夹/root/boothome/下
[root@server0 ~]# tar -zxf /boothome.tar.gz  -C  /root/boothome/
[root@server0 ~]# ls /root/boothome/
boot  home

    4）创建一个名为 /root/backup.tar.bz2 的归档文件，其中包含 /usr/local 目录中的内容
[root@server0 ~]# tar -jcf /root/backup.tar.bz2  /usr/local
tar: 从成员名中删除开头的“/”
[root@server0 ~]# tar -tf /root/backup.tar.bz2 
usr/local/
usr/local/bin/

案例9:虚拟机 server0上操作
	 新建用户 tom，其用户ID为1234，密码是abcdef 
[root@server0 ~]# useradd -u 1234 tom
[root@server0 ~]# echo abcdef | passwd --stdin tom

	 创建下列用户、组以及组的成员关系： 
	 – 一个名为 stugrp 的组
[root@server0 ~]# groupadd stugrp
        
	 – 一个名为 natasha 的用户，其属于 stugrp 组， 这个组是该用户的从属组 
[root@server0 ~]# useradd -G stugrp natasha

	 – 一个名为 harry 的用户，其属于 stugrp 组，这个 组是该用户的从属组
[root@server0 ~]# useradd -g stugrp harry
 
	 – 一个名为 sarah 的用户，其在系统中没有可交互的 Shell（/sbin/nologin），并且不是 adminuser 组的成员
[root@server0 ~]# useradd -s /sbin/nologin sarah
 
	 – natasha 、harry、sarah 的密码都要设置为 pass123
[root@server0 ~]# echo pass123 | passwd --stdin sarah
更改用户 sarah 的密码 。
passwd：所有的身份验证令牌已经成功更新。
[root@server0 ~]# echo pass123 | passwd --stdin harry
更改用户 harry 的密码 。
passwd：所有的身份验证令牌已经成功更新。
[root@server0 ~]# echo pass123 | passwd --stdin natasha

案例10:虚拟机 server0上操作
    为用户 natasha 配置一个定时任务 
	– 每天在本地时间 14:23 执行 
	– 需要完成的任务操作为 /bin/echo  hiya
[root@server0 ~]# rpm -q chrony
chrony-1.29.1-1.el7.x86_64
[root@server0 ~]# vim /etc/chrony.conf 
[root@server0 ~]# head -6 /etc/chrony.conf | tail -1
server classroom.example.com iburst
[root@server0 ~]# date -s '1999-12-31 12:56:35'
1999年 12月 31日 星期五 12:56:35 CST
[root@server0 ~]# date
1999年 12月 31日 星期五 12:56:45 CST
[root@server0 ~]# systemctl restart chronyd.service 
[root@server0 ~]# date
2018年 07月 19日 星期四 14:18:04 CST
---------------------------------
[root@server0 ~]# rpm -q cronie crontabs
cronie-1.4.11-11.el7.x86_64
crontabs-1.11-6.20121102git.el7.noarch
[root@server0 ~]# mkdir /natasha

[root@server0 ~]# chown -R natasha /natasha
[root@server0 ~]# ls -ld /natasha
drwxr-xr-x. 2 natasha root 6 7月  19 14:23 /natasha

[root@server0 ~]# crontab -e -u natasha
crontab: installing new crontab
[root@server0 ~]# crontab -l -u natasha
* * * * * /usr/bin/echo helloworld >> /natasha/hell.txt
23 14 * * * /bin/echo hiya
[root@server0 ~]# systemctl restart crond.service 
[root@server0 ~]# cat /natasha/hell.txt 
helloworld
helloworld
helloworld
helloworld
helloworld
[root@server0 ~]# crontab -r -u natasha
[root@server0 ~]# crontab -l -u natasha
no crontab for natasha



案例11:虚拟机 server0上操作
	将文件 /etc/fstab 拷贝为 /var/tmp/fstab，并调整文件 /var/tmp/fstab权限 
[root@server0 ~]# cp /etc/fstab /var/tmp/fstab

	满足以下要求：
	– 此文件的拥有者是 root 
	– 此文件属于 root 组 
	– 此文件对任何人都不可执行 
	– 用户 natasha 能够对此文件执行读和写操作
[root@server0 ~]# ls -l /var/tmp/fstab
-rw-r--r--. 1 root root 313 7月  19 14:41 /var/tmp/fstab
[root@server0 ~]# setfacl -m u:natasha:rwx /var/tmp/fstab
[root@server0 ~]# getfacl /var/tmp/fstab | grep natasha
getfacl: Removing leading '/' from absolute path names
user:natasha:rwx
[root@server0 ~]# ls -l /var/tmp/fstab
-rw-rwxr--+ 1 root root 313 7月  19 14:41 /var/tmp/fstab

  
	– 用户 harry 对此文件既不能读，也不能写 
[root@server0 ~]# setfacl -m u:harry:000 /var/tmp/fstab
[root@server0 ~]# getfacl /var/tmp/fstab | grep harry
getfacl: Removing leading '/' from absolute path names
user:harry:---

	– 所有其他用户（当前的和将来的）能够对此文件进行 读操作
[root@server0 ~]# chmod o+x /var/tmp/fstab
[root@server0 ~]# ls -l /var/tmp/fstab
-rw-rwxr-x+ 1 root root 313 7月  19 14:41 /var/tmp/fstab

案例12:虚拟机 server0上操作
	创建一个共用目录 /home/admins，要求如下：
[root@server0 ~]# mkdir /home/admins
 
	 – 此目录的组所有权是 adminuser
[root@server0 ~]# groupadd adminuser
[root@server0 ~]# chown :adminuser /home/admins/
[root@server0 ~]# ls -ld /home/admins/
drwxr-xr-x. 2 root adminuser 6 7月  19 15:08 /home/admins/
 
	 – adminuser 组的成员对此目录有读写和执行的权限，除此以外的其他所有用户没有任何权限
[root@server0 ~]# chmod 770 /home/admins/
[root@server0 ~]# ls -ld /home/admins/
drwxrwx---. 2 root adminuser 6 7月  19 15:08 /home/admins/

	 – root用户能够访问系统中的所有文件和目录 
	 – 在此目录中创建的文件，其组的所有权会自动设置为 属于 adminuser 组
[root@server0 ~]# chmod g+s /home/admins/
[root@server0 ~]# ls -ld /home/admins/
drwxrws---. 2 root adminuser 6 7月  19 15:08 /home/admins/

案例13：虚拟机 server0上操作,绑定到LDAP验证服务

 –  使用系统 classroom.example.com 提供的LDAP服务
 –  验证服务的基本DN是：dc=example,dc=com
 –  账户信息和验证信息都是由 LDAP 提供的
 –  连接要使用证书加密，证书可以在下面的链接下载：
      http://classroom.example.com/pub/example-ca.crt 
 –  确认本地可以识别ldapuser10用户

 1.安装一个客户端sssd软件,与LDAP 服务端沟通
[root@server0 ~]# yum install -y sssd

  2.安装authconfig-gtk 图形的工具 配置sssd软件
[root@server0 ~]# yum install -y authconfig-gtk

  3.运行authconfig-gtk 图形的工具
[root@server0 ~]# authconfig-gtk
dc=example,dc=com
classroom.example.com
下载CA证书
证书url  http://classroom.example.com/pub/example-ca.crt

  4.重起客户端服务sssd服务，设置开机自启动
[root@server0 ~]# systemctl restart sssd
[root@server0 ~]# systemctl enable sssd

 5.验证
[root@server0 ~]# showmount -e 172.25.254.254
Export list for 172.25.254.254:
/home/guests 172.25.0.0/255.255.0.0
[root@server0 ~]# mkdir /home/guests
[root@server0 ~]# mount 172.25.254.254:/home/guests /home/guests
[root@server0 ~]# ls /home/guests
ldapuser0   ldapuser13  ldapuser18  ldapuser4  ldapuser9

[root@server0 ~]# vim /etc/fstab
[root@server0 ~]# tail -1 /etc/fstab 
172.25.254.254:/home/guests /home/guests nfs  defaults,_netdev 0  0

[root@server0 ~]# umount /home/guests/
[root@server0 ~]# ls /home/guests/
[root@server0 ~]# df -hT
文件系统       类型      容量  已用  可用 已用% 挂载点
/dev/vda1      xfs        10G  3.4G  6.7G   34% /
devtmpfs       devtmpfs  906M     0  906M    0% /dev
tmpfs          tmpfs     921M   80K  921M    1% /dev/shm
tmpfs          tmpfs     921M   17M  904M    2% /run
tmpfs          tmpfs     921M     0  921M    0% /sys/fs/cgroup
[root@server0 ~]# mount -a
[root@server0 ~]# df -hT /home/guests/
文件系统                    类型  容量  已用  可用 已用% 挂载点
172.25.254.254:/home/guests nfs4   10G  3.1G  7.0G   31% /home/guests
[root@server0 ~]# ls /home/guests/
ldapuser0   ldapuser13  ldapuser18  ldapuser4  ldapuser9
ldapuser1   ldapuser14  ldapuser19  ldapuser5
ldapuser10  ldapuser15  ldapuser2   ldapuser6


 
案例14：虚拟机 server0上操作,访问NFS共享
 –  查看classroom.example.com的NFS共享
 –  将classroom.example.com的NFS共享目录，挂载到本地/home/guests

 1.查看共享classroom.example.com
[root@server0 ~]# showmount -e 172.25.254.254
Export list for 172.25.254.254:
/home/guests 172.25.0.0/255.255.0.0
[root@server0 ~]# mkdir /home/guests

 
  2.访问共享内容,将服务端的共享文件夹数据，挂载到本地/home/guests以本地的/home/guests作为访问点
[root@server0 ~]# vim /etc/fstab
[root@server0 ~]# tail -1 /etc/fstab 
172.25.254.254:/home/guests /home/guests nfs  defaults,_netdev 0  0

[root@server0 ~]# umount /home/guests/
[root@server0 ~]# ls /home/guests/
[root@server0 ~]# df -hT
文件系统       类型      容量  已用  可用 已用% 挂载点
/dev/vda1      xfs        10G  3.4G  6.7G   34% /
devtmpfs       devtmpfs  906M     0  906M    0% /dev
tmpfs          tmpfs     921M   80K  921M    1% /dev/shm
tmpfs          tmpfs     921M   17M  904M    2% /run
tmpfs          tmpfs     921M     0  921M    0% /sys/fs/cgroup
[root@server0 ~]# mount -a
[root@server0 ~]# df -hT /home/guests/
文件系统                    类型  容量  已用  可用 已用% 挂载点
172.25.254.254:/home/guests nfs4   10G  3.1G  7.0G   31% /home/guests
[root@server0 ~]# ls /home/guests/
ldapuser0   ldapuser13  ldapuser18  ldapuser4  ldapuser9
ldapuser1   ldapuser14  ldapuser19  ldapuser5

案例15:虚拟机 server0上操作,（GPT分区模式）规划分区
 关闭虚拟机，图形添加一块60G的硬盘并规划分区：
   划分4个10G的主分区；
   1个12G的主分区
[root@server0 ~]# parted /dev/vdc
(parted) mktable gpt
是/Yes/否/No? no
(parted) unit GB
(parted) parted -h
(parted) mkpart par10
起始点？ 0                              
结束点？ 10G
(parted) mkpart par10-2
起始点？ 10G                              
结束点？ 20G
(parted) mkpart par10-3
起始点？ 20G                              
结束点？ 30G
(parted) mkpart par10-4
起始点？ 30G                              
结束点？ 40G
(parted) mkpart par12
起始点？ 40G                              
结束点？ 52G
(parted) print
Disk /dev/vdc: 64.4GB
Sector size (logical/physical): 512B/512B
Partition Table: gpt
Number  Start   End     Size    File system  Name     标志
 1      0.00GB  10.0GB  10.0GB               par10
 2      10.0GB  20.0GB  10.0GB               par10-2
 3      20.0GB  30.0GB  10.0GB               par10-3
 4      30.0GB  40.0GB  10.0GB               par10-4
 5      40.0GB  52.0GB  12.0GB               padr12
[root@server0 ~]# lsblk /dev/vdc
NAME   MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vdc    253:32   0   60G  0 disk 
├─vdc1 253:33   0  9.3G  0 part 
├─vdc2 253:34   0  9.3G  0 part 
├─vdc3 253:35   0  9.3G  0 part 
├─vdc4 253:36   0  9.3G  0 part 
└─vdc5 253:37   0 11.2G  0 part 
[root@server0 ~]# blkid /dev/vdc
/dev/vdc: PTTYPE="gpt" 
[root@server0 ~]# blkid /dev/vda[root@server0 ~]# blkid /dev/systemvg/vo
/dev/systemvg/vo: UUID="c950c723-87d9-4acd-8d4a-712bb5e5ae1b" TYPE="xfs"
/dev/vda: PTTYPE="dos" 

案例16:在server上操作,分区使用

1、案例15中新添加60G硬盘的第一个主分区
– 格式化成xfs分区，实现该分区开机自动挂载/mnt/xpart
[root@server0 ~]# mkfs.xfs /dev/vdc1
[root@server0 ~]# blkid /dev/vdc1
/dev/vdc1: UUID="2c3ebd3c-c7ee-402c-98b5-665fbaa614ad" TYPE="xfs" PARTLABEL="par10" PARTUUID="20202f1a-053b-44b5-9f78-c5f1c7e7ac63" 

[root@server0 ~]# mkdir /mnt/xpart
[root@server0 ~]# vim /etc/fstab 
[root@server0 ~]# tail -2 /etc/fstab
172.25.254.254:/home/guests /home/guests nfs  defaults,_netdev 0  0
/dev/vdc1   /mnt/xpart   xfs   defaults  0   0
[root@server0 ~]# mount -a
[root@server0 ~]# df -hT /mnt/xpart
文件系统       类型  容量  已用  可用 已用% 挂载点
/dev/vdc1      xfs   9.4G   33M  9.3G    1% /mnt/xpart



2、案例15中新添加60G硬盘的第二个主分区
– 完成开机自动挂载，挂载点/mnt/mypart,文件系统为ext4
[root@server0 ~]# mkdir /mnt/mypart
[root@server0 ~]# mkfs.ext4 /dev/vdc2
[root@server0 ~]# blkid /dev/vdc2
/dev/vdc2: UUID="3dc7ab21-0e61-4e71-b9bf-81d14a72074a" TYPE="ext4" PARTLABEL="par10-2" PARTUUID="e7f2ae16-57ca-4649-9a59-2ee3919c06bb" 
[root@server0 ~]# vim /etc/fstab 
[root@server0 ~]# tail -1 /etc/fstab
/dev/vdc2   /mnt/mypart  ext4   defaults  0  0
[root@server0 ~]# mount -a
[root@server0 ~]# df -hT /mnt/mypart/
文件系统       类型  容量  已用  可用 已用% 挂载点
/dev/vdc2      ext4  9.1G   37M  8.6G    1% /mnt/mypart


案例17:虚拟机 server0操作，构建 LVM 存储
[root@server0 ~]# lsblk /dev/vdc[3-5]
NAME MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vdc3 253:35   0  9.3G  0 part 
vdc4 253:36   0  9.3G  0 part 
vdc5 253:37   0 11.2G  0 part 
 – 新建一个名为 systemvg 的卷组 
[root@server0 ~]# vgcreate systemvg /dev/vdc3

 – 在此卷组中创建一个名为 vo 的逻辑卷，大小为8G
[root@server0 ~]# lvcreate -L 8G -n vo systemvg
 – 将逻辑卷 vo 格式化为 xfs 文件系统 
[root@server0 ~]# mkfs.xfs /dev/systemvg/vo
[root@server0 ~]# partprobe
[root@server0 ~]# blkid /dev/systemvg/vo
/dev/systemvg/vo: UUID="c950c723-87d9-4acd-8d4a-712bb5e5ae1b" TYPE="xfs"

 – 将逻辑卷 vo 挂载到 /vo 目录，并在此目录下建立一个测试文件 votest.txt，内容为“I AM KING” 
[root@server0 ~]# mkdir /vo
[root@server0 ~]# vim /etc/fstab 
[root@server0 ~]# tail -1 /etc/fstab
/dev/systemvg/vo  /vo      xfs       defaults  0  0
[root@server0 ~]# mount -a

 – 实现逻辑卷vo开机自动挂载到/vo
[root@server0 ~]# echo 'I AM KING' > /vo/votest.txt
[root@server0 ~]# cat /vo/votest.txt
I AM KING


案例18:虚拟机 server0操作，构建 LVM 存储(修改PE大小)
[root@server0 ~]# lsblk /dev/vdc[4-5]
NAME MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
vdc4 253:36   0  9.3G  0 part 
vdc5 253:37   0 11.2G  0 part 

 – 在 datastore 卷组中的所有逻辑卷，其PE的大小为1M
[root@server0 ~]# vgcreate  -s  1M  datastore  /dev/vdc4
[root@server0 ~]# vgdisplay /dev/datastore | grep PE
  PE Size               1.00 MiB
  Total PE              9536
  Alloc PE / Size       0 / 0   
  Free  PE / Size       9536 / 9.31 GiB

 – 新的逻辑卷命名为 database，其大小为50个PE的大小，属于 datastore 卷组 
[root@server0 ~]# lvcreate -l 50 -n  database /dev/datastore

 – 使用 EXT3 文件系统对逻辑卷 database 格式化，此逻辑卷应该在开机时自动挂载到 /mnt/database 目录
[root@server0 ~]# mkfs.ext3 /dev/datastore/database 
[root@server0 ~]# blkid /dev/datastore/database
/dev/datastore/database: UUID="8bc49413-d9b5-4b8d-8b7c-5dcd2e6273ca" SEC_TYPE="ext2" TYPE="ext3" 

[root@server0 ~]# echo '/dev/datastore/database  /mnt/database  ext3  defaults 0  0' >>/etc/fstab 
[root@server0 ~]# mkdir /mnt/database
[root@server0 ~]# mount -a
[root@server0 ~]# tail -1 /etc/fstab 
/dev/datastore/database  /mnt/database  ext3  defaults 0  0
[root@server0 ~]# df -hT /mnt/database/
文件系统                       类型  容量  已用  可用 已用% 挂载点
/dev/mapper/datastore-database ext3   45M  827K   41M    2% /mnt/database


案例19:在在 server0、desktop0 上操作
– 将防火墙默认区域设置为trusted
[root@server0 ~]# firewall-cmd --set-default-zone=trusted
[root@desktop0 ~]# firewall-cmd --set-default-zone=trusted 


案例21:在server上操作，搭建mariadb数据库系统（安装软件，启动服务即可）
 1. 在 server0 上安装 MariaDB 数据库系统
   1)安装 mariadb-server软件包
   2)启动 mariadb 服务
[root@server0 ~]# yum install mariadb-server -y
[root@server0 ~]# systemctl start mariadb
[root@server0 ~]# systemctl enable mariadb.service 

案例22：配置聚合连接
在两个虚拟机之间配置一个链路，要求如下： 
	– 此链路使用接口 eth1 和 eth2 
	– 此链路在其中一个接口失效时仍然能工作 
	– 此链路在 server0 上使用下面的地址 172.16.3.20/255.255.255.0 
	– 此链路在 desktop0 上使用下面的地址 172.16.3.25/255.255.255.0 
	– 此链路在系统重启之后依然保持正常状态
 1.制作虚拟网卡 team0, 参考  man  teamd.conf  全文查找/example  按n跳转匹配项 
[root@server0 ~]# nmcli connection add con-name team0 ifname team0 type team autoconnect yes config '{"runner":{"name":"roundrobin"}}'

[root@desktop0 ~]# nmcli connection add con-name team0 ifname team0 type team autoconnect yes config '{"runner":{"name":"activebackup"}}'


 2. 为 team0添加成员
[root@server0 ~]# nmcli connection add con-name team0-1 ifname eth1 type team-slave master team0 

[root@server0 ~]# nmcli connection add con-name team0-2 ifname eth2 type team-slave  master team0 
[root@desktop0 ~]# nmcli connection add con-name team0-1 ifname eth1 type team-slave master team0 

[root@desktop0 ~]# nmcli connection add con-name team0-2 ifname eth2 type team-slave master team0 

3.配置team0的ip地址与激活
[root@server0 ~]# nmcli connection modify team0 ipv4.method manual ipv4.addresses   172.16.3.20/24 connection.autoconnect yes
[root@server0 ~]# nmcli connection up team0

[root@server0 ~]# nmcli connection up team0-1

[root@server0 ~]# nmcli connection up team0-2
[root@server0 ~]# nmcli connection show 
名称         UUID                                  类型            设备  
team0        1403623e-1c4b-475c-a226-07d6413a714b  team            team0 
System eth0  5fb06bd0-0bb0-7ffb-45f1-d6edd65f3e03  802-3-ethernet  eth0  
team0-2      f0f7e279-47ec-4dd6-a9dd-801bebd77069  802-3-ethernet  eth2  
team0-1      9fb4576c-2a01-4efe-94d8-ea44cc03c9f6  802-3-ethernet  eth1  
[root@server0 ~]# teamdctl team0 state
setup:
  runner: roundrobin
ports:
  eth1
    link watches:
      link summary: up
      instance[link_watch_0]:
        name: ethtool
        link: up
  eth2
    link watches:
      link summary: up
      instance[link_watch_0]:
        name: ethtool
        link: up
[root@desktop0 ~]# nmcli connection modify team0 ipv4.method manual ipv4.addresses 172.16.3.25/24 connection.autoconnect yes
[root@desktop0 ~]# nmcli connection up team0
[root@desktop0 ~]# nmcli connection up team0-1
Connection successfully activated (D-Bus active path: /org/freedesktop/NetworkManager/ActiveConnection/7)
[root@desktop0 ~]# nmcli connection up team0-2

[root@desktop0 ~]# teamdctl team0 state
setup:
  runner: activebackup
ports:
  eth1
    link watches:
      link summary: up
      instance[link_watch_0]:
        name: ethtool
        link: up
  eth2
    link watches:
      link summary: up
      instance[link_watch_0]:
        name: ethtool
        link: up
runner:
  active port: eth1
[root@desktop0 ~]# ping -c 2 172.16.3.20
PING 172.16.3.20 (172.16.3.20) 56(84) bytes of data.
64 bytes from 172.16.3.20: icmp_seq=1 ttl=64 time=0.819 ms
64 bytes from 172.16.3.20: icmp_seq=2 ttl=64 time=0.703 ms



案例23:配置Samba文件夹共享，防火墙默认区域设置为trusted，修改SElinux状态为Enforcing
在 server0 上发布共享文件夹
[root@server0 ~]# firewall-cmd --get-default-zone 
trusted
[root@server0 ~]# getenforce 
Enforcing
[root@server0 ~]# vim /etc/selinux/config
Samba账号管理工具：
pdbedit -a 用户名
pdbedit -L [用户名]
pdbedit -x 用户名
测试Samba共享资源：
smbclient -L 服务器地址 【密码为空（直接回车）】
smbclient -U 用户名 //服务器地址/共享名 【需要密码】
[devops]
    path = /devops
    hosts allow = 172.25.0.0/24
    write list = harry
[global]
	workgroup = STAFF


[root@desktop0 ~]# smbclient  -L  server0.example.com
Enter root's password:                          //此处无需输入密码，直接回车

 1）此服务器必须是 STAFF 工作组的一个成员 
 2）发布目录 /devops，共享名为 devops 
 5）用户 harry 对共享 devops可读可写，密码是 123sm
 6）用户 kenji 对共享 devops可读，密码是 123

1.安装软件包:samba
[root@server0 ~]# yum install -y samba 

2.建立Samba共享帐号
[root@server0 ~]# mkdri /devops
[root@server0 ~]# vim /etc/samba/smb.conf 
[root@server0 ~]# head -89 /etc/samba/smb.conf | tail -1
	workgroup = STAFF
[root@server0 ~]# tail -3 /etc/samba/smb.conf 
[devops]
path  =  /devops
hosts allow = 172.25.0.0/24

write list  =  harry
[root@server0 ~]# getsebool -a | grep samba
samba_export_all_rw --> off
[root@server0 ~]# setsebool -P samba_export_all_rw on
[root@server0 ~]# getsebool samba_export_all_rw 
samba_export_all_rw --> on
[root@server0 ~]# grep harry /etc/passwd
harry:x:1236:1237::/home/harry:/bin/bash
[root@server0 ~]# usermod -s /sbin/nologin harry
[root@server0 ~]# grep harry /etc/passwd
harry:x:1236:1237::/home/harry:/sbin/nologin
[root@server0 ~]# useradd -s /sbin/nologin kenji

[root@server0 ~]# ls -ld /devops/
drwxr-xr-x. 2 root root 6 7月  19 20:46 /devops/
[root@server0 ~]# chmod -R 700 /devops/
[root@server0 ~]# ls -ld /devops/
drwx------. 2 root root 6 7月  19 20:46 /devops/


[root@server0 ~]# setfacl -m u:harry:7 /devops/
[root@server0 ~]# setfacl -m u:kenji:5 /devops/
[root@server0 ~]# getfacl /devops/ | grep harry  
getfacl: Removing leading '/' from absolute path names
user:harry:rwx
[root@server0 ~]# getfacl /devops/ | grep   kenji
getfacl: Removing leading '/' from absolute path names
user:kenji:r-x
[root@server0 ~]# pdbedit -a harry
new password:123
[root@server0 ~]# pdbedit -a kenji
[root@server0 ~]# pdbedit -L
harry:1236:
kenji:1238:
  -a, --create                       create user
  -L, --list                         list all users
  -x, --delete                       delete user
[root@server0 ~]# chmod -R 700 /devops
[root@server0 ~]# ls -ld /devops
drwx------+ 2 root root 21 7月  19 18:44 /devops

[root@server0 ~]# systemctl restart smb
[root@server0 ~]# systemctl enable smb.service 

3.修改Samb服务配置 
[root@server0 ~]# 
4.重起smb服务，设置开机自起
[root@server0 ~]# 
5. SELinux设置布尔值（功能的开关）
      – 需要加 -P 选项才能实现永久设置
[root@server0 ~]# 
6.修改本地权限
[root@server0 ~]# 

在 desktop0 上访问共享文件夹
Mount options for cifs
       See  the options section of the mount.cifs(8) man page (cifs-utils package must be
       installed).

 1）访问 server0 上发布共享文件夹,实现开机自动挂载到/mnt/smb
 2）实现对/mnt/smb目录可以读和写


1 创建挂载点
[root@desktop0 ~]# mkdir /mnt/smb


2 所需软件包:cifs-utils
[root@desktop0 ~]# yum install cifs-utils.x86_64 
[root@desktop0 ~]# yum install -y samba-client.x86_64 
[root@desktop0 ~]# rpm -q samba-client cifs-utils
samba-client-4.1.1-31.el7.x86_64
cifs-utils-6.2-6.el7.x86_64
[root@server0 ~]# echo 123server > /devops/serv.txt
[root@desktop0 ~]# smbclient -U harry //172.25.0.11/devops
Enter harry's password: 123
Domain=[STAFF] OS=[Unix] Server=[Samba 4.1.1]
smb: \> ls
[root@desktop0 ~]# vim /etc/fstab
[root@desktop0 ~]# tail -2 /etc/fstab 
UUID=9bf6b9f7-92ad-441b-848e-0257cbb883d1 /                       xfs     defaults        1 1
//172.25.0.11/devops  /mnt/smb  cifs  defaults,user=kenji,password=123,sec=ntlmssp,multiuser,_netdev  0   0
[root@desktop0 ~]# df -hT /mnt/smb
文件系统             类型  容量  已用  可用 已用% 挂载点
//172.25.0.11/devops cifs   10G  3.6G  6.5G   36% /mnt/smb
[root@desktop0 ~]# ls /mnt/smb
serv.txt
[root@desktop0 ~]# echo deskclient > /mnt/smb/desk.txt
-bash: /mnt/smb/desk.txt: 权限不够
[root@desktop0 ~]# cat /mnt/smb/serv.txt 
123server
[root@desktop0 ~]# umount /mnt/smb  ------------
[root@desktop0 ~]# ls /mnt/smb
-------------------------------------------------------------------
[root@server0 ~]# systemctl restart smb
[root@server0 ~]# systemctl is-active smb
active
[root@server0 ~]# getfacl /devops/ | grep harry
getfacl: Removing leading '/' from absolute path names
user:harry:rwx
[root@server0 ~]# getfacl /devops/ | grep kenji
getfacl: Removing leading '/' from absolute path names
user:kenji:r-x
[root@server0 ~]# pdbedit -L
harry:1236:
kenji:1238:
[root@server0 ~]# tail -3 /etc/samba/smb.conf
[devops]
path  =  /devops
write list  =  harry
[root@server0 ~]# head -89 /etc/samba/smb.conf | tail -1
	workgroup = STAFF
[root@server0 ~]# getsebool samba_export_all_rw
samba_export_all_rw --> on
[root@server0 ~]# ls /devops/
serv.txt
[root@server0 ~]# grep harry /etc/passwd
harry:x:1236:1237::/home/harry:/sbin/nologin
[root@server0 ~]# grep kenji /etc/passwd
kenji:x:1238:1240::/home/kenji:/sbin/nologin

[root@desktop0 ~]# vim /etc/fstab
[root@desktop0 ~]# tail -2 /etc/fstab
#//172.25.0.11/devops  /mnt/smb  cifs  defaults,user=kenji,password=123,sec=ntlmssp,multiuser,_netdev  0   0
//172.25.0.11/devops  /mnt/smb  cifs  defaults,user=harry,password=123,sec=ntlmssp,multiuser,_netdev  0   0
[root@desktop0 ~]# mount -a

[root@desktop0 ~]# df -hT /mnt/smb
文件系统             类型  容量  已用  可用 已用% 挂载点
//172.25.0.11/devops cifs   10G  3.6G  6.5G   36% /mnt/smb
[root@desktop0 ~]# cat /mnt/smb/serv.txt
123server
[root@desktop0 ~]# echo deskclient > /mnt/smb/desk.txt
-bash: /mnt/smb/desk.txt: 权限不够



[root@desktop0 ~]# cifscreds add -u harry 172.25.0.11
Password: 123
[root@desktop0 ~]# echo deskclient > /mnt/smb/desk.txt
[root@desktop0 ~]# cifscreds update -u kenji -d 172.25.0.11
Password: 123





案例25：普通NFS共享的实现
 –  在 server0 上配置NFS服务 
   1）只读的方式共享目录 /public，只能被172.25.0.0/24网段中的客户机系统访问 
[root@server0 ~]# yum install -y nfs-utils
[root@server0 ~]# rpm -q nfs-utils
nfs-utils-1.3.0-0.el7.x86_64
[root@server0 ~]# vim /etc/exports
[root@server0 ~]# cat /etc/exports
/public 172.25.0.10/24(ro)
[root@server0 ~]# mkdir /public
[root@server0 ~]# systemctl start nfs-server
[root@server0 ~]# systemctl is-active nfs-server.service 
active
[root@server0 ~]# echo abcServer > /public/ser.txt

[root@server0 ~]# vim /etc/exports
[root@server0 ~]# cat /etc/exports
/public  172.25.0.0/24(ro)
#/public   *(ro)

[root@server0 ~]# systemctl restart nfs-server

   63  systemctl restart nfs
   64  systemctl stop firewalld

 – 在 desktop0 上访问NFS共享目录 
   1）将 server0 的 /public 挂到本地 /mnt/nfsmount 
   2）这些文件系统在系统启动时自动挂
[root@desktop0 ~]# mkdir /mnt/nfsmount
[root@desktop0 ~]# vim /etc/fstab 
[root@desktop0 ~]# tail -1 /etc/fstab
172.25.0.11:/public   /mnt/nfsmount  nfs  defaults,_netdev  0  0
[root@desktop0 ~]# mount -a
Unable to find suitable address.
[root@desktop0 ~]# ls /mnt/nfsmount/
ser.txt
[root@desktop0 ~]# cat /mnt/nfsmount/ser.txt 
abcServer

[root@desktop0 ~]# tail -3 /etc/fstab
UUID=9bf6b9f7-92ad-441b-848e-0257cbb883d1 /                       xfs     defaults        1 1
#//172.25.0.11/devops  /mnt/smb cifs defaults,user=kenji,pass=123,sec=ntlmssp,multiuser,_netdev 0  0
172.25.0.11:/public   /mnt/nfsmount  nfs  defaults,_netdev  0  0


虚拟机Server0
[root@server0 ~]# 

虚拟机Desktop0
[root@server0 ~]# 


案例26:在在 server0、desktop0 上操作
– 将防火墙默认区域设置为trusted
[root@server0 ~]# firewall-cmd --get-default-zone
trusted
[root@desktop0 ~]# firewall-cmd --get-default-zone 
trusted


案例27:为虚拟机 server 配置Web服务，实现网站的部署 
- 实现客户端访问172.25.0.11网页内容为 环太平洋之雷霆再起
[root@server0 ~]# yum install -y httpd
[root@server0 ~]# vim /etc/httpd/conf/httpd.conf
[root@server0 ~]# head -95 /etc/httpd/conf/httpd.conf | tail -1
ServerName server0.example.com:80
[root@server0 ~]# echo '<marquee><h1><font color=blue>环太平洋之雷霆再起</font></h1></marquee>' > /var/www/html/index.html
[root@server0 ~]# systemctl start httpd
[root@desktop0 ~]# yum install elinks.x86_64 
[root@desktop0 ~]# elinks -dump http://server0.example.com
                               环太平洋之雷霆再起
[root@desktop0 ~]# firefox http://server0.example.com


案例20:在server上操作,验证端口转发策略
– 从desktop0上访问server0的5423端口，与访问server0的80端口效果一样
[root@server0 ~]# firewall-cmd  --permanent --zone=public --add-forward=port=5423:proto=tcp:toport=80
success
[root@server0 ~]# firewall-cmd --zone=public  --list-all 
public
  interfaces: 
  sources: 
  services: dhcpv6-client ssh
  ports: 
  masquerade: no
  forward-ports: 
[root@server0 ~]# firewall-cmd  --permanent --zone=public --add-service=http
success

[root@server0 ~]# firewall-cmd --reload 
success
[root@server0 ~]# firewall-cmd --set-default-zone=public 
success
[root@server0 ~]# systemctl restart httpd
[root@server0 ~]# firewall-cmd --zone=public --list-all 
public
  interfaces: 
  sources: 
  services: dhcpv6-client http ssh
  ports: 
  masquerade: no
  forward-ports: port=5423:proto=tcp:toport=80:toaddr=
  icmp-blocks: 
  rich rules: 
[root@desktop0 ~]# elinks -dump http://server0.example.com:5423
                               环太平洋之雷霆再起
	
[root@server0 ~]# firewall-cmd --zone=trusted --list-all 
trusted
  interfaces: 
  sources: 
  services: 
  ports: 
  masquerade: no
  forward-ports: 
  icmp-blocks: 
  rich rules: 


案例28:在server上操作，配置一个数据库
– 为mariadb数据库root设置登陆密码为 haxi
– 新建一个数据库名为 nsd
– 除了 root 用户,此数据库只能被用户 lisi 查询,此用户的密码为 123(用户的授权)
– 数据库 nsd 中应该包含来自数据库复制的内容,
复制文件的 URL为:http://classroom/pub/materials/users.sql

[root@server0 ~]# 

案例29:在server上操作，使用数据库查询

1)密码是 solicitous 的人的名字?
2)有多少人的姓名是 Barbara 同时居住在 Sunnyvale?


[root@server0 ~]# 
案例30：发布iSCSI网络磁盘

 1）配置 server0 提供 iSCSI 服务，要求如下：
 2）磁盘名为iqn.2016-02.com.example:server0
 3）服务端口为 3260
 4）使用 iscsi_store（后端存储的名称） 作其后端卷，其大小为 3GiB
 5）此磁盘服务只能被 desktop0.example.com 访问，在Server0上配置客户端ACL为iqn.2016-02.com.example:desktop0
 6）配置 desktop0 使用 server0 提供 iSCSI 服务
[root@server0 ~]#



 
####################################################################
案例练习,准备:
            rht-vmctl  reset  classroom
            rht-vmctl  reset  server
	        rht-vmctl  reset  desktop
######################################################

案例1:为虚拟机 server 配置
- 实现三个网站的部署
- 实现客户端访问server0.example.com网页内容为  test01
- 实现客户端访问www0.example.com网页内容为 test02
- 实现客户端访问webapp0.example.com网页内容为 test03

[root@server0 ~]# 
案例2:为虚拟机 server 配置Web访问控制
在 Web 网站 http://server0.example.com 的 DocumentRoot 目录下创建一个名为 private 的子目录，要求如下：
1）在server0.example.com的DocumentRoot目录下，private的子目录里书写网页文件index.html内容为  test04
2）此页面只能在本机浏览，但是从其他系统不能访问这个目录的内容

[root@server0 ~]# 

案例3:为虚拟机 server 使用自定Web根目录

调整 Web 站点 http://server0.example.com 的网页目录，要求如下：
1）新建目录 /webroot，作为此站点新的网页目录
2）确保站点 http://server0.example.com  仍然可访问

[root@server0 ~]# 

案例4：为虚拟机 server 部署动态WSGI站点
为站点 webapp0.example.com 配置提供动态Web内容，要求如下：
1）此虚拟主机侦听在端口8909
2）测试网页从以下地址下载，不要作任何更改http://classroom/pub/materials/webinfo.wsgi 
3）从浏览器访问 http://webapp0.example.com:8909 可接收到动态生成的 Web 页面
[root@server0 ~]# 


案例5：配置安全Web服务
为站点 http://server0.example.com 配置TLS加密 
1）一个已签名证书从以下地址获取 http://classroom/pub/tls/certs/server0.crt 
2）此证书的密钥从以下地址获取 http://classroom/pub/tls/private/server0.key 
3）此证书的签名授权信息从以下地址获取 http://classroom/pub/example-ca.crt

[root@server0 ~]# 


NSD Study













2018-04
达内IT培训集团	

案例练习,准备:
            rht-vmctl  reset  classroom
            rht-vmctl  reset  server
	        rht-vmctl  reset  desktop
###################################################################

案例1:为虚拟机 server0 配置以下静态地址参数，实现永久设置
– 主机名:server0.example.com	
– IP地址:172.25.0.11
– 子网掩码:255.255.255.0
– 默认网关:172.25.0.254
– DNS服务器:172.25.254.254


案例2:为虚拟机 desktop0 配置以下静态地址参数，实现永久设置
– 主机名:desktop0.example.com
– IP地址:172.25.0.10
– 子网掩码:255.255.255.0
– 默认网关:172.25.0.254
– DNS服务器:172.25.254.254


案例3:指定yum软件源
为 server0 指定可用的 yum 软件源
– YUM软件库的地址为 http://classroom.example.com/content/rhel7.0/x86_64/dvd
– 将此配置为虚拟机 server0 的默认软件仓库
– 确认可用的仓库列表
– 利用yum仓库安装httpd与vsftpd


案例4:指定yum软件源
为 desktop0 指定可用的 yum 软件源
– YUM软件库的地址为 http://classroom.example.com/content/rhel7.0/x86_64/dvd
– 将此配置为虚拟机 server0 的默认软件仓库
– 确认可用的仓库列表
– 利用yum仓库安装httpd与vsftpd



案例5：虚拟机 server0上操作，复制、粘贴、移动
 以root用户新建/nsddir/目录，在此目录下新建readme.txt文件，并进一步完成下列操作
[root@svr7 ~]# mkdir /nsddir
[root@svr7 ~]# touch /nsddir/readme.txt
[root@svr7 ~]# ls /nsddir/
readme.txt


 1）将“I love Linux”写入到文件readme.txt 
[root@server0 ~]# 
	

 2）将readme.txt重命名为mylove.txt
[root@server0 ~]# 

 3）将/etc/passwd、/boot、/etc/group同时拷贝到/nsddir目录下
[root@server0 ~]# 


 4）将ifconfig命令的前两行内容，追加写入mylove.txt
[root@server0 ~]# 

 5）将主机名永久配置文件，拷贝到/nsddir目录下
[root@server0 ~]# 

 6）将DNS永久配置文件，拷贝到/nsddir目录下
[root@server0 ~]# 


 7）新建目录结构/nsd/test
[root@server0 ~]# 

 8）在目录/nsd/test创建文件nsd.txt并写入内容 NSD  Student
[root@server0 ~]# 

 9）将/nsd/test/nsd.txt文件复制到/root目录下，同时 改名为 tedu.txt
[root@server0 ~]# 
 10）利用vim 修改文件/etc/hostname将其原有内容全部删除，写入新的内容为server0.example.com
[root@server0 ~]# 

 11）将/etc/passwd 、/etc/resolv.conf、/etc/hostname 同时拷贝到/nsd/test/目录下
[root@server0 ~]# 



 12）将文件 /nsd/test/hostname 重改名为 hn.txt 
[root@server0 ~]# 
 13）创建目录结构/nsd/test/kernel
[root@server0 ~]# mkdir -p /nsd/test/kernel


案例6:虚拟机 server0上操作，查找并处理文件
– 创建目录 /root/findfiles/
[root@server0 ~]# 
– 利用find查找所有用户 student 拥有的文件,把它们拷贝到 /root/findfiles/ 文件夹中
[root@server0 ~]# 


– 利用find查找/boot目录下大于10M并且必须是文件，拷贝到/opt
[root@server0 ~]# 

– 利用find查找/boot/ 目录下以 vm 开头且必须是文件，拷贝到/opt
[root@server0 ~]# 



案例7:虚拟机 server0上操作,查找并提取文件内容
1.在文件 /usr/share/dict/words 中查找到所有包含字符串 seismic 的行,将输出信息,写入到/opt/nsd.txt
[root@server0 ~]# 
2.将/etc/login.defs文件有效内容 写入到/root/login.txt
[root@server0 ~]# 

3.提取/etc/passwd以bash结尾的行，将其信息写入/opt/system.txt
[root@server0 ~]# 


案例8:虚拟机 server0上操作,tar制作/释放归档压缩包（zcf、ztf、zxf、jcf、jtf、jxf、cf、tf）
    1）备份/boot、/home这两个文件夹，保存为boothome.tar.gz文件
[root@server0 ~]# 

    2）查看boothome.tar.gz文件内包含哪些内容 
[root@server0 ~]# 


    3）将boothome.tar.gz释放到文件夹/root/boothome/下
[root@server0 ~]# 

    4）创建一个名为 /root/backup.tar.bz2 的归档文件，其中包含 /usr/local 目录中的内容
[root@server0 ~]# 


案例9:虚拟机 server0上操作
	 新建用户 tom，其用户ID为1234，密码是abcdef 
[root@server0 ~]# 

	 创建下列用户、组以及组的成员关系： 
	 – 一个名为 stugrp 的组
[root@server0 ~]# 
        
	 – 一个名为 natasha 的用户，其属于 stugrp 组， 这个组是该用户的从属组 
[root@server0 ~]# 

	 – 一个名为 harry 的用户，其属于 stugrp 组，这个 组是该用户的从属组
[root@server0 ~]# 
 
	 – 一个名为 sarah 的用户，其在系统中没有可交互的 Shell（/sbin/nologin），并且不是 adminuser 组的成员
[root@server0 ~]# 
 
	 – natasha 、harry、sarah 的密码都要设置为 pass123
[root@server0 ~]# 
 
案例10:虚拟机 server0上操作
    为用户 natasha 配置一个定时任务 
	– 每天在本地时间 14:23 执行 
	– 需要完成的任务操作为 /bin/echo  hiya

[root@server0 ~]# 




案例11:虚拟机 server0上操作
	将文件 /etc/fstab 拷贝为 /var/tmp/fstab，并调整文件 /var/tmp/fstab权限 
[root@server0 ~]# 

	满足以下要求：
	– 此文件的拥有者是 root 
	– 此文件属于 root 组 
	– 此文件对任何人都不可执行 
	– 用户 natasha 能够对此文件执行读和写操作
[root@server0 ~]# 
  
	– 用户 harry 对此文件既不能读，也不能写 
[root@server0 ~]# 

	– 所有其他用户（当前的和将来的）能够对此文件进行 读操作

案例12:虚拟机 server0上操作
	创建一个共用目录 /home/admins，要求如下：
[root@server0 ~]# 
 
	 – 此目录的组所有权是 adminuser
[root@server0 ~]# 
 
	 – adminuser 组的成员对此目录有读写和执行的权限，除此以外的其他所有用户没有任何权限
[root@server0 ~]# 

	 – root用户能够访问系统中的所有文件和目录 
	 – 在此目录中创建的文件，其组的所有权会自动设置为 属于 adminuser 组
[root@server0 ~]# 

案例13：虚拟机 server0上操作,绑定到LDAP验证服务

 –  使用系统 classroom.example.com 提供的LDAP服务
 –  验证服务的基本DN是：dc=example,dc=com
 –  账户信息和验证信息都是由 LDAP 提供的
 –  连接要使用证书加密，证书可以在下面的链接下载：
      http://classroom.example.com/pub/example-ca.crt 
 –  确认本地可以识别ldapuser10用户

 1.安装一个客户端sssd软件,与LDAP 服务端沟通
[root@server0 ~]# 

  2.安装authconfig-gtk 图形的工具 配置sssd软件
[root@server0 ~]# 

  3.运行authconfig-gtk 图形的工具
[root@server0 ~]# 

  4.重起客户端服务sssd服务，设置开机自启动
[root@server0 ~]# 
 5.验证
[root@server0 ~]# 



案例14：虚拟机 server0上操作,访问NFS共享
 –  查看classroom.example.com的NFS共享
 –  将classroom.example.com的NFS共享目录，挂载到本地/home/guests

 1.查看共享classroom.example.com

[root@server0 ~]# 

 
  2.访问共享内容,将服务端的共享文件夹数据，挂载到本地/home/guests以本地的/home/guests作为访问点

[root@server0 ~]# 



案例15:虚拟机 server0上操作,（GPT分区模式）规划分区
 关闭虚拟机，图形添加一块60G的硬盘并规划分区：
   划分4个10G的主分区；
   1个12G的主分区

[root@server0 ~]# 


案例16:在server上操作,分区使用

1、案例15中新添加60G硬盘的第一个主分区
– 格式化成xfs分区，实现该分区开机自动挂载/mnt/xpart

[root@server0 ~]# 

2、案例15中新添加60G硬盘的第二个主分区
– 完成开机自动挂载，挂载点/mnt/mypart,文件系统为ext4
[root@server0 ~]# 


案例17:虚拟机 server0操作，构建 LVM 存储

 – 新建一个名为 systemvg 的卷组 
[root@server0 ~]# 

 – 在此卷组中创建一个名为 vo 的逻辑卷，大小为8G
[root@server0 ~]# 
 – 将逻辑卷 vo 格式化为 xfs 文件系统 
[root@server0 ~]# 

 – 将逻辑卷 vo 挂载到 /vo 目录，并在此目录下建立一个测试文件 votest.txt，内容为“I AM KING” 
[root@server0 ~]# 

 – 实现逻辑卷vo开机自动挂载到/vo
[root@server0 ~]# 


案例18:虚拟机 server0操作，构建 LVM 存储(修改PE大小)
 – 在 datastore 卷组中的所有逻辑卷，其PE的大小为1M
 – 新的逻辑卷命名为 database，其大小为50个PE的大小，属于 datastore 卷组 
 – 使用 EXT3 文件系统对逻辑卷 database 格式化，此逻辑卷应该在开机时自动挂载到 /mnt/database 目录

[root@server0 ~]# 


案例19:在在 server0、desktop0 上操作
– 将防火墙默认区域设置为trusted
[root@server0 ~]# 




案例21:在server上操作，搭建mariadb数据库系统（安装软件，启动服务即可）
 1. 在 server0 上安装 MariaDB 数据库系统
   1)安装 mariadb-server软件包
   2)启动 mariadb 服务
[root@server0 ~]# 

案例22：配置聚合连接
在两个虚拟机之间配置一个链路，要求如下： 
	– 此链路使用接口 eth1 和 eth2 
	– 此链路在其中一个接口失效时仍然能工作 
	– 此链路在 server0 上使用下面的地址 172.16.3.20/255.255.255.0 
	– 此链路在 desktop0 上使用下面的地址 172.16.3.25/255.255.255.0 
	– 此链路在系统重启之后依然保持正常状态
 1.制作虚拟网卡 team0, 参考  man  teamd.conf  全文查找/example  按n跳转匹配项 

[root@server0 ~]# 

 2. 为 team0添加成员
[root@server0 ~]# 

3.配置team0的ip地址与激活

[root@server0 ~]# 


案例23:配置Samba文件夹共享，防火墙默认区域设置为trusted，修改SElinux状态为Enforcing
在 server0 上发布共享文件夹
 1）此服务器必须是 STAFF 工作组的一个成员 
 2）发布目录 /devops，共享名为 devops 
 5）用户 harry 对共享 devops可读可写，密码是 123
 6）用户 kenji 对共享 devops可读，密码是 123


1.安装软件包:samba
[root@server0 ~]# 

2.建立Samba共享帐号
[root@server0 ~]# 


3.修改Samb服务配置 
[root@server0 ~]# 
4.重起smb服务，设置开机自起
[root@server0 ~]# 
5. SELinux设置布尔值（功能的开关）
      – 需要加 -P 选项才能实现永久设置

[root@server0 ~]# 
6.修改本地权限
[root@server0 ~]# 


在 desktop0 上访问共享文件夹

 1）访问 server0 上发布共享文件夹,实现开机自动挂载到/mnt/smb
 2）实现对/mnt/smb目录可以读和写


1 创建挂载点
[root@server0 ~]# 

2 所需软件包:cifs-utils
[root@server0 ~]# 




案例25：普通NFS共享的实现
 –  在 server0 上配置NFS服务 
   1）只读的方式共享目录 /public，只能被172.25.0.0/24网段中的客户机系统访问 
 
 – 在 desktop0 上访问NFS共享目录 
   1）将 server0 的 /public 挂到本地 /mnt/nfsmount 
   2）这些文件系统在系统启动时自动挂

虚拟机Server0
[root@server0 ~]# 

虚拟机Desktop0
[root@server0 ~]# 


案例26:在在 server0、desktop0 上操作
– 将防火墙默认区域设置为trusted
[root@server0 ~]# 

案例27:为虚拟机 server 配置Web服务，实现网站的部署 
- 实现客户端访问172.25.0.11网页内容为 环太平洋之雷霆再起

[root@server0 ~]# 


案例20:在server上操作,验证端口转发策略
– 从desktop0上访问server0的5423端口，与访问server0的80端口效果一样

虚拟机Server0
[root@server0 ~]# 

案例28:在server上操作，配置一个数据库
– 为mariadb数据库root设置登陆密码为 haxi
– 新建一个数据库名为 nsd
– 除了 root 用户,此数据库只能被用户 lisi 查询,此用户的密码为 123(用户的授权)
– 数据库 nsd 中应该包含来自数据库复制的内容,
复制文件的 URL为:http://classroom/pub/materials/users.sql

[root@server0 ~]# 

案例29:在server上操作，使用数据库查询

1)密码是 solicitous 的人的名字?
2)有多少人的姓名是 Barbara 同时居住在 Sunnyvale?


[root@server0 ~]# 
案例30：发布iSCSI网络磁盘

 1）配置 server0 提供 iSCSI 服务，要求如下：
 2）磁盘名为iqn.2016-02.com.example:server0
 3）服务端口为 3260
 4）使用 iscsi_store（后端存储的名称） 作其后端卷，其大小为 3GiB
 5）此磁盘服务只能被 desktop0.example.com 访问，在Server0上配置客户端ACL为iqn.2016-02.com.example:desktop0
 6）配置 desktop0 使用 server0 提供 iSCSI 服务
[root@server0 ~]#



 
####################################################################
案例练习,准备:
            rht-vmctl  reset  classroom
            rht-vmctl  reset  server
	        rht-vmctl  reset  desktop
######################################################

案例1:为虚拟机 server 配置
- 实现三个网站的部署
- 实现客户端访问server0.example.com网页内容为  test01
- 实现客户端访问www0.example.com网页内容为 test02
- 实现客户端访问webapp0.example.com网页内容为 test03

[root@server0 ~]# 
案例2:为虚拟机 server 配置Web访问控制
在 Web 网站 http://server0.example.com 的 DocumentRoot 目录下创建一个名为 private 的子目录，要求如下：
1）在server0.example.com的DocumentRoot目录下，private的子目录里书写网页文件index.html内容为  test04
2）此页面只能在本机浏览，但是从其他系统不能访问这个目录的内容

[root@server0 ~]# 

案例3:为虚拟机 server 使用自定Web根目录

调整 Web 站点 http://server0.example.com 的网页目录，要求如下：
1）新建目录 /webroot，作为此站点新的网页目录
2）确保站点 http://server0.example.com  仍然可访问

[root@server0 ~]# 

案例4：为虚拟机 server 部署动态WSGI站点
为站点 webapp0.example.com 配置提供动态Web内容，要求如下：
1）此虚拟主机侦听在端口8909
2）测试网页从以下地址下载，不要作任何更改http://classroom/pub/materials/webinfo.wsgi 
3）从浏览器访问 http://webapp0.example.com:8909 可接收到动态生成的 Web 页面
[root@server0 ~]# 


案例5：配置安全Web服务
为站点 http://server0.example.com 配置TLS加密 
1）一个已签名证书从以下地址获取 http://classroom/pub/tls/certs/server0.crt 
2）此证书的密钥从以下地址获取 http://classroom/pub/tls/private/server0.key 
3）此证书的签名授权信息从以下地址获取 http://classroom/pub/example-ca.crt

[root@server0 ~]# 






















